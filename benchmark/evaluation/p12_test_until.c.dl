/*𝝐 */


/*(Start())@2 · ("x"=_)@3 · ("y"=_)@4 · ((["x"<="y"]@5 · ("x"<="y")@6 · (EXIT())@7) \/ (["x">"y"]@8 · ("x">"y")@9 · ("x"=("x"-1))@10 · ((("x"-"y")-1)<0)@11 · (EXIT())@12))*/

flow(2,3).
flow(3,4).
flow(5,6).
flow(6,7).
flow(7,7).
flow(8,9).
flow(9,10).
flow(10,11).
flow(11,12).
flow(12,12).
Start(2).
State(2).
LtEqVar("x",3,"y").
GtVar("x",3,"y").
State(3).
LtEqVar("x",4,"y").
GtVar("x",4,"y").
State(5).
LtEqVar("x",6,"y").
State(6).
EXIT(7).
State(7).
State(4).
State(8).
GtVar("x",9,"y").
State(9).
State(10).
State(11).
EXIT(12).
State(12).
control_flow(4,5) :- LtEqVarD("x",4,"y").
control_flow(4,8) :- GtVarD("x",4,"y").
//AU("x">"y","x"<="y")
.decl Start(x:number)
.decl State(x:number)
.decl flow(x:number,y:number)
.decl control_flow(x:number,y:number)
.decl transFlow(x:number,y:number)
.decl NotTotal(loc:number)
.decl EXIT(n0:number)
.decl GtVar(x:symbol,loc:number,y:symbol)
.decl LtEqVar(x:symbol,loc:number,y:symbol)
.decl GtVarD(x:symbol,loc:number,y:symbol)
.decl LtEqVarD(x:symbol,loc:number,y:symbol)
.decl x_lteq_y(loc:number)
.decl x_gt_y(loc:number)
.decl x_gt_y_AND_x_lteq_y(loc:number)
.decl x_lteq_y_EU_x_gt_y_AND_x_lteq_y(loc:number)
.decl NOT_x_lteq_y_EU_x_gt_y_AND_x_lteq_y(loc:number)
.decl AF_x_lteq_y_T(interm_state:number,loc:number)
.decl AF_x_lteq_y_S(loc:number)
.decl AF_x_lteq_y(loc:number)
.decl AF_x_lteq_y_AND_NOT_x_lteq_y_EU_x_gt_y_AND_x_lteq_y(loc:number)
.decl x_gt_y_AU_x_lteq_y(loc:number)
.decl x_gt_y_AU_x_lteq_y_Final(loc:number)transFlow(x,y) :- control_flow(x,y).
transFlow(x,z) :- control_flow(x,y), transFlow(y,z).
NotTotal(loc) :- State(loc), !control_flow(loc,_).
NotTotal(loc) :- NotTotal(locI), control_flow(loc,locI).
control_flow(x,y) :- flow(x,y).
GtVarD(x,loc,n) :- GtVar(x,loc,n).
GtVarD(x,loc,n) :- GtVarD(x,locI,n), control_flow(locI,loc), !GtVar(x,loc,_), !LtEqVar(x,loc,_).
LtEqVarD(x,loc,n) :- LtEqVar(x,loc,n).
LtEqVarD(x,loc,n) :- LtEqVarD(x,locI,n), control_flow(locI,loc), !LtEqVar(x,loc,_), !GtVar(x,loc,_).
x_lteq_y(loc) :- State(loc), GtVarD("x",loc,"y").
x_gt_y(loc) :- State(loc), LtEqVarD("x",loc,"y").
x_gt_y_AND_x_lteq_y(loc) :- x_gt_y(loc), x_lteq_y(loc).
x_lteq_y(loc) :- State(loc), GtVarD("x",loc,"y").
x_lteq_y_EU_x_gt_y_AND_x_lteq_y(loc) :- x_lteq_y(loc), control_flow(loc,tempOne), x_lteq_y_EU_x_gt_y_AND_x_lteq_y(tempOne).
x_lteq_y_EU_x_gt_y_AND_x_lteq_y(loc) :- x_gt_y_AND_x_lteq_y(loc).
NOT_x_lteq_y_EU_x_gt_y_AND_x_lteq_y(loc) :- State(loc), !x_lteq_y_EU_x_gt_y_AND_x_lteq_y(loc).
x_lteq_y(loc) :- State(loc), LtEqVarD("x",loc,"y").
AF_x_lteq_y_T(interm_state,loc) :- AF_x_lteq_y_T(tempOne,loc), !x_lteq_y(tempOne), control_flow(tempOne,interm_state).
AF_x_lteq_y_T(interm_state,loc) :- !x_lteq_y(loc), control_flow(loc,interm_state).
AF_x_lteq_y_S(loc) :- !x_lteq_y(loc), control_flow(loc,tempOne), AF_x_lteq_y_S(tempOne).
AF_x_lteq_y_S(loc) :- AF_x_lteq_y_T(loc,loc).
AF_x_lteq_y(loc) :- State(loc), !AF_x_lteq_y_S(loc).
AF_x_lteq_y_AND_NOT_x_lteq_y_EU_x_gt_y_AND_x_lteq_y(loc) :- AF_x_lteq_y(loc), NOT_x_lteq_y_EU_x_gt_y_AND_x_lteq_y(loc).
x_gt_y_AU_x_lteq_y(loc) :- AF_x_lteq_y_AND_NOT_x_lteq_y_EU_x_gt_y_AND_x_lteq_y(loc).
x_gt_y_AU_x_lteq_y_Final(loc) :- Start(loc), x_gt_y_AU_x_lteq_y(loc), !NotTotal(loc).
.output GtVar
.output LtEqVar
.output Start
.output State
.output flow
.output EXIT
.output x_gt_y_AU_x_lteq_y_Final(IO=stdout)

