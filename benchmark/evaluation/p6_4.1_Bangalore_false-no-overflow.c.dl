/*(Start())@0 · (EXIT())@1*/

flow(0,1).
flow(1,1).
Start(0).
State(0).
EXIT(1).
State(1).

/*(Start())@8 · ("x"=_)@9 · ("y"=_)@10 · ((["y"<=0]@11 · ("y"<=0)@12 · ((["x"<0]@13 · ("x"<0)@14 · (Return(0))@15) \/ (["x">=0]@16 · ("x">=0)@17 · ((["y">0]@18 · ("y">0)@19 · ("x"<0)@20 · (Return(0))@21) \/ (["y"<=0]@22 · ("y"<=0)@23 · (("x">=0)@24)^w))))) \/ (["y">0]@25 · ("y">0)@26 · (Return(0))@27))*/

flow(8,9).
flow(9,10).
flow(11,12).
flow(13,14).
flow(14,15).
flow(15,15).
flow(16,17).
flow(18,19).
flow(19,20).
flow(20,21).
flow(21,21).
flow(22,23).
flow(23,24).
flow(24,24).
flow(25,26).
flow(26,27).
flow(27,27).
Start(8).
State(8).
GtEq("x",9,0).
Lt("x",9,0).
State(9).
LtEq("y",10,0).
Gt("y",10,0).
State(11).
LtEq("y",12,0).
State(13).
Lt("x",14,0).
State(14).
Return(0,15).
State(15).
State(12).
State(16).
GtEq("x",17,0).
State(18).
Gt("y",19,0).
State(19).
Lt("x",20,0).
State(20).
Return(0,21).
State(21).
State(17).
State(22).
LtEq("y",23,0).
State(23).
GtEq("x",24,0).
State(24).
State(10).
State(25).
Gt("y",26,0).
State(26).
Return(0,27).
State(27).
control_flow(10,11) :- LtEqD("y",10,0).
control_flow(12,13) :- LtD("x",12,0).
control_flow(12,16) :- GtEqD("x",12,0).
control_flow(17,18) :- GtD("y",17,0).
control_flow(17,22) :- LtEqD("y",17,0).
control_flow(10,25) :- GtD("y",10,0).
//AF("x"<0)
.decl Start(x:number)
.decl State(x:number)
.decl flow(x:number,y:number)
.decl control_flow(x:number,y:number)
.decl transFlow(x:number,y:number)
.decl NotTotal(loc:number)
.decl EXIT(n0:number)
.decl Return(n0:number,n1:number)
.decl Gt(x:symbol,loc:number,n:number)
.decl GtEq(x:symbol,loc:number,n:number)
.decl Lt(x:symbol,loc:number,n:number)
.decl LtEq(x:symbol,loc:number,n:number)
.decl GtD(x:symbol,loc:number,n:number)
.decl GtEqD(x:symbol,loc:number,n:number)
.decl LtD(x:symbol,loc:number,n:number)
.decl LtEqD(x:symbol,loc:number,n:number)
.decl x_lt_0(loc:number)
.decl AF_x_lt_0_T(interm_state:number,loc:number)
.decl AF_x_lt_0_S(loc:number)
.decl AF_x_lt_0(loc:number)
.decl AF_x_lt_0_Final(loc:number)transFlow(x,y) :- control_flow(x,y).
transFlow(x,z) :- control_flow(x,y), transFlow(y,z).
NotTotal(loc) :- State(loc), !control_flow(loc,_).
NotTotal(loc) :- NotTotal(locI), control_flow(loc,locI).
control_flow(x,y) :- flow(x,y).
GtD(x,loc,n) :- Gt(x,loc,n).
GtD(x,loc,n) :- GtD(x,locI,n), control_flow(locI,loc), !Gt(x,loc,_), !LtEq(x,loc,_).
GtEqD(x,loc,n) :- GtEq(x,loc,n).
GtEqD(x,loc,n) :- GtEqD(x,locI,n), control_flow(locI,loc), !GtEq(x,loc,_), !Lt(x,loc,_).
LtD(x,loc,n) :- Lt(x,loc,n).
LtD(x,loc,n) :- LtD(x,locI,n), control_flow(locI,loc), !Lt(x,loc,_), !GtEq(x,loc,_).
LtEqD(x,loc,n) :- LtEq(x,loc,n).
LtEqD(x,loc,n) :- LtEqD(x,locI,n), control_flow(locI,loc), !LtEq(x,loc,_), !Gt(x,loc,_).
x_lt_0(loc) :- State(loc), LtD("x",loc,0).
AF_x_lt_0_T(interm_state,loc) :- AF_x_lt_0_T(tempOne,loc), !x_lt_0(tempOne), control_flow(tempOne,interm_state).
AF_x_lt_0_T(interm_state,loc) :- !x_lt_0(loc), control_flow(loc,interm_state).
AF_x_lt_0_S(loc) :- !x_lt_0(loc), control_flow(loc,tempOne), AF_x_lt_0_S(tempOne).
AF_x_lt_0_S(loc) :- AF_x_lt_0_T(loc,loc).
AF_x_lt_0(loc) :- State(loc), !AF_x_lt_0_S(loc).
AF_x_lt_0_Final(loc) :- Start(loc), AF_x_lt_0(loc), !NotTotal(loc).
.output Gt
.output GtEq
.output Lt
.output LtEq
.output Start
.output State
.output flow
.output EXIT
.output Return
.output AF_x_lt_0_Final(IO=stdout)

