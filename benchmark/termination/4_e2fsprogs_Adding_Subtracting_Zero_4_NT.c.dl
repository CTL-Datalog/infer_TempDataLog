/*𝝐 */


/*(Start())@0 · ("flag"=0)@1 · (Return(0))@2*/

flow(0,1).
flow(1,2).
flow(2,2).
Start(0).
State(0).
State(1).
Return(0,2).
State(2).

/*(Start())@9 · ("ret"=_)@10 · ("count"=_)@11 · ((["count"<=0]@12 · ("count"<=0)@13 · (Return(0))@14) \/ (["count">0]@15 · ("count">0)@16 · ("buf"=0)@17 · ((["count"<=0]@18 · ("count"<=0)@19 · (Return(0))@20) \/ (["count">0]@21 · ("count">0)@22 · ((["ret">0]@23 · ("ret">0)@24 · ("count"<1)@25 · (Return(0))@26) \/ (["ret"<=0]@27 · ("ret"<=0)@28 · (("count">=1)@29)^w))))))*/

flow(9,10).
flow(10,11).
flow(12,13).
flow(13,14).
flow(14,14).
flow(15,16).
flow(16,17).
flow(18,19).
flow(19,20).
flow(20,20).
flow(21,22).
flow(23,24).
flow(24,25).
flow(25,26).
flow(26,26).
flow(27,28).
flow(28,29).
flow(29,29).
Start(9).
State(9).
LtEq("ret",10,0). // delete this 
Gt("ret",10,0).
State(10).
LtEq("count",11,0).
Gt("count",11,0).
State(12).
LtEq("count",13,0).
State(13).
Return(0,14).
State(14).
State(11).
State(15).
Gt("count",16,0).
State(16).
State(18).
LtEq("count",19,0).
State(19).
Return(0,20).
State(20).
State(17).
State(21).
Gt("count",22,0).
State(23).
Gt("ret",24,0).
State(24).
State(25).
Return(0,26).
State(26).
State(22).
State(27).
LtEq("ret",28,0).
State(28).
Gt("count",29,0).
State(29).
control_flow(11,12) :- LtEqD("count",11,0).
control_flow(11,15) :- GtD("count",11,0).
control_flow(17,18) :- LtEqD("count",17,0).
control_flow(17,21) :- GtD("count",17,0).
control_flow(22,23) :- GtD("ret",22,0).
control_flow(22,27) :- LtEqD("ret",22,0).
/*(Start())@32 · ("count"=0)@33 · ((["flag"=1]@34 · ("flag"=1)@35 · (Return(0))@36) \/ ([("flag"!=1)]@37 · (("flag"!=1))@38 · ((["loc">="len"]@39 · ("loc">="len")@40 · (Return(0))@41) \/ (["loc"<"len"]@42 · ("loc"<"len")@43 · ("len"="loc")@44 · (Return(0))@45))))*/

flow(32,33).
flow(34,35).
flow(35,36).
flow(36,36).
flow(37,38).
flow(39,40).
flow(40,41).
flow(41,41).
flow(42,43).
flow(43,44).
flow(44,45).
flow(45,45).
Start(32).
State(32).
State(34).
Eq("flag",35,1).
State(35).
Return(0,36).
State(36).
State(33).
State(37).
NotEq("flag",38,1).
State(39).
GtEqVar("loc",40,"len").
State(40).
Return(0,41).
State(41).
State(38).
State(42).
LtVar("loc",43,"len").
State(43).
GtEqVar("loc",44,"len").
State(44).
Return(0,45).
State(45).
control_flow(33,34) :- EqD("flag",33,1).
control_flow(33,37) :- NotEqD("flag",33,1).
control_flow(38,39) :- GtEqVarD("loc",38,"len").
control_flow(38,42) :- LtVarD("loc",38,"len").
//AF(EXIT())
.decl Start(x:number)
.decl State(x:number)
.decl flow(x:number,y:number)
.decl control_flow(x:number,y:number)
.decl transFlow(x:number,y:number)
.decl NotTotal(loc:number)
.decl Return(n0:number,n1:number)
.decl LtVar(x:symbol,loc:number,y:symbol)
.decl GtEqVar(x:symbol,loc:number,y:symbol)
.decl NotEq(x:symbol,loc:number,n:number)
.decl Eq(x:symbol,loc:number,n:number)
.decl Gt(x:symbol,loc:number,n:number)
.decl LtEq(x:symbol,loc:number,n:number)
.decl LtVarD(x:symbol,loc:number,y:symbol)
.decl GtEqVarD(x:symbol,loc:number,y:symbol)
.decl NotEqD(x:symbol,loc:number,n:number)
.decl EqD(x:symbol,loc:number,n:number)
.decl GtD(x:symbol,loc:number,n:number)
.decl LtEqD(x:symbol,loc:number,n:number)
.decl EXITPred(loc:number)
.decl AF_EXITPred_T(interm_state:number,loc:number)
.decl AF_EXITPred_S(loc:number)
.decl AF_EXITPred(loc:number)
.decl AF_EXITPred_Final(loc:number)transFlow(x,y) :- control_flow(x,y).
transFlow(x,z) :- control_flow(x,y), transFlow(y,z).
NotTotal(loc) :- State(loc), !control_flow(loc,_).
NotTotal(loc) :- NotTotal(locI), control_flow(loc,locI).
control_flow(x,y) :- flow(x,y).
LtVarD(x,loc,n) :- LtVar(x,loc,n).
LtVarD(x,loc,n) :- LtVarD(x,locI,n), control_flow(locI,loc), !LtVar(x,loc,n), !GtEqVar(x,loc,n).
GtEqVarD(x,loc,n) :- GtEqVar(x,loc,n).
GtEqVarD(x,loc,n) :- GtEqVarD(x,locI,n), control_flow(locI,loc), !GtEqVar(x,loc,n), !LtVar(x,loc,n).
NotEqD(x,loc,n) :- NotEq(x,loc,n).
NotEqD(x,loc,n) :- NotEqD(x,locI,n), control_flow(locI,loc), !NotEq(x,loc,n), !Eq(x,loc,n).
EqD(x,loc,n) :- Eq(x,loc,n).
EqD(x,loc,n) :- EqD(x,locI,n), control_flow(locI,loc), !Eq(x,loc,n), !NotEq(x,loc,n).
GtD(x,loc,n) :- Gt(x,loc,n).
GtD(x,loc,n) :- GtD(x,locI,n), control_flow(locI,loc), !Gt(x,loc,n), !LtEq(x,loc,n).
LtEqD(x,loc,n) :- LtEq(x,loc,n).
LtEqD(x,loc,n) :- LtEqD(x,locI,n), control_flow(locI,loc), !LtEq(x,loc,n), !Gt(x,loc,n).
EXITPred(loc) :- Return(_,loc).
AF_EXITPred_T(interm_state,loc) :- AF_EXITPred_T(tempOne,loc), !EXITPred(tempOne), control_flow(tempOne,interm_state).
AF_EXITPred_T(interm_state,loc) :- !EXITPred(loc), control_flow(loc,interm_state).
AF_EXITPred_S(loc) :- !EXITPred(loc), control_flow(loc,tempOne), AF_EXITPred_S(tempOne).
AF_EXITPred_S(loc) :- AF_EXITPred_T(loc,loc).
AF_EXITPred(loc) :- State(loc), !AF_EXITPred_S(loc).
AF_EXITPred_Final(loc) :- Start(loc), AF_EXITPred(loc), !NotTotal(loc).
.output LtVar
.output GtEqVar
.output NotEq
.output Eq
.output Gt
.output LtEq
.output Start
.output State
.output flow
.output Return
.output AF_EXITPred_Final(IO=stdout)

.output NotTotal(IO=stdout)

