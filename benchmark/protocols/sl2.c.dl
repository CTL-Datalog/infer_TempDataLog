/*(Join())@43*/

flow(43,43).
State(43).

/*(Start())@44 · (len=2)@45 · (peek=1)@46 · (type=23)@47 · (((n=&rr.length)@49 · (([peek=0]@50 · (((((curr_rec=(curr_rec+1))@53 · (rr=(rr+1))@54 · (read_bytes=(read_bytes+n))@55 · (Return(0))@56) \/ ((([(peek!=0)]@58 · (([n=&rr.length]@59 · (curr_rec=(curr_rec+1))@60 · (rr=(rr+1))@61 · (read_bytes=(read_bytes+n))@62 · (Return(0))@63) \/ ([(n!=&rr.length)]@64 · (read_bytes=(read_bytes+n))@65 · (Return(0))@66))) \/ ([peek=0]@67 · (read_bytes=(read_bytes+n))@68 · (Return(0))@69))))) \/ ((((curr_rec=(curr_rec+1))@72 · (rr=(rr+1))@73 · (read_bytes=(read_bytes+n))@74 · (Return(0))@75) \/ ((([(peek!=0)]@77 · (([n=&rr.length]@78 · (curr_rec=(curr_rec+1))@79 · (rr=(rr+1))@80 · (read_bytes=(read_bytes+n))@81 · (Return(0))@82) \/ ([(n!=&rr.length)]@83 · (read_bytes=(read_bytes+n))@84 · (Return(0))@85))) \/ ([peek=0]@86 · (read_bytes=(read_bytes+n))@87 · (Return(0))@88))))))) \/ ([(peek!=0)]@89 · (((tem=0)@90 · (((curr_rec=(curr_rec+1))@92 · (rr=(rr+1))@93 · (read_bytes=(read_bytes+n))@94 · (Return(0))@95) \/ ((([(peek!=0)]@97 · (([n=&rr.length]@98 · (curr_rec=(curr_rec+1))@99 · (rr=(rr+1))@100 · (read_bytes=(read_bytes+n))@101 · (Return(0))@102) \/ ([(n!=&rr.length)]@103 · (read_bytes=(read_bytes+n))@104 · (Return(0))@105))) \/ ([peek=0]@106 · (read_bytes=(read_bytes+n))@107 · (Return(0))@108))))) \/ (((tem!=0))@109 · (((curr_rec=(curr_rec+1))@111 · (rr=(rr+1))@112 · (read_bytes=(read_bytes+n))@113 · (Return(0))@114) \/ ((([(peek!=0)]@116 · (([n=&rr.length]@117 · (curr_rec=(curr_rec+1))@118 · (rr=(rr+1))@119 · (read_bytes=(read_bytes+n))@120 · (Return(0))@121) \/ ([(n!=&rr.length)]@122 · (read_bytes=(read_bytes+n))@123 · (Return(0))@124))) \/ ([peek=0]@125 · (read_bytes=(read_bytes+n))@126 · (Return(0))@127))))))))) \/ ((([peek=0]@129 · (((((curr_rec=(curr_rec+1))@132 · (rr=(rr+1))@133 · (read_bytes=(read_bytes+n))@134 · (Return(0))@135) \/ ((([(peek!=0)]@137 · (((n=&rr.length)@138 · (curr_rec=(curr_rec+1))@139 · (rr=(rr+1))@140 · (read_bytes=(read_bytes+n))@141 · (Return(0))@142) \/ (((n!=&rr.length))@143 · (read_bytes=(read_bytes+n))@144 · (Return(0))@145))) \/ ([peek=0]@146 · (read_bytes=(read_bytes+n))@147 · (Return(0))@148))))) \/ ((((curr_rec=(curr_rec+1))@151 · (rr=(rr+1))@152 · (read_bytes=(read_bytes+n))@153 · (Return(0))@154) \/ ((([(peek!=0)]@156 · (((n=&rr.length)@157 · (curr_rec=(curr_rec+1))@158 · (rr=(rr+1))@159 · (read_bytes=(read_bytes+n))@160 · (Return(0))@161) \/ (((n!=&rr.length))@162 · (read_bytes=(read_bytes+n))@163 · (Return(0))@164))) \/ ([peek=0]@165 · (read_bytes=(read_bytes+n))@166 · (Return(0))@167))))))) \/ ([(peek!=0)]@168 · (((tem=0)@169 · (((curr_rec=(curr_rec+1))@171 · (rr=(rr+1))@172 · (read_bytes=(read_bytes+n))@173 · (Return(0))@174) \/ ((([(peek!=0)]@176 · (((n=&rr.length)@177 · (curr_rec=(curr_rec+1))@178 · (rr=(rr+1))@179 · (read_bytes=(read_bytes+n))@180 · (Return(0))@181) \/ (((n!=&rr.length))@182 · (read_bytes=(read_bytes+n))@183 · (Return(0))@184))) \/ ([peek=0]@185 · (read_bytes=(read_bytes+n))@186 · (Return(0))@187))))) \/ (((tem!=0))@188 · (((curr_rec=(curr_rec+1))@190 · (rr=(rr+1))@191 · (read_bytes=(read_bytes+n))@192 · (Return(0))@193) \/ ((([(peek!=0)]@195 · (((n=&rr.length)@196 · (curr_rec=(curr_rec+1))@197 · (rr=(rr+1))@198 · (read_bytes=(read_bytes+n))@199 · (Return(0))@200) \/ (((n!=&rr.length))@201 · (read_bytes=(read_bytes+n))@202 · (Return(0))@203))) \/ ([peek=0]@204 · (read_bytes=(read_bytes+n))@205 · (Return(0))@206))))))))))*/


// SSL3_RECORD_set_read(90). // add these two fact 
// SSL3_RECORD_set_read(169).// add these two fact  


flow(44,45).
flow(45,46).
flow(46,47).
flow(47,49).
flow(56,56).
flow(63,63).
flow(66,66).
flow(69,69).
flow(75,75).
flow(82,82).
flow(85,85).
flow(88,88).
flow(95,95).
flow(102,102).
flow(105,105).
flow(108,108).
flow(114,114).
flow(121,121).
flow(124,124).
flow(127,127).
flow(135,135).
flow(142,142).
flow(145,145).
flow(148,148).
flow(154,154).
flow(161,161).
flow(164,164).
flow(167,167).
flow(174,174).
flow(181,181).
flow(184,184).
flow(187,187).
flow(193,193).
flow(200,200).
flow(203,203).
flow(206,206).
Start(44).
State(44).
State(45).
NotEq("peek",46,0).
State(46).
EqVar("n",49,"&rr.length").
State(53).
State(54).
State(55).
Return(0,56).
State(56).
State(59).
State(60).
State(61).
State(62).
Return(0,63).
State(63).
State(58).
State(64).
State(65).
Return(0,66).
State(66).
State(67).
State(68).
Return(0,69).
State(69).
State(72).
State(73).
State(74).
Return(0,75).
State(75).
State(78).
State(79).
State(80).
State(81).
Return(0,82).
State(82).
State(77).
State(83).
State(84).
Return(0,85).
State(85).
State(50).
State(86).
State(87).
Return(0,88).
State(88).
State(49).
Eq("tem",90,0).
State(92).
State(93).
State(94).
Return(0,95).
State(95).
State(98).
State(99).
State(100).
State(101).
Return(0,102).
State(102).
State(97).
State(103).
State(104).
Return(0,105).
State(105).
State(90).
State(106).
State(107).
Return(0,108).
State(108).
State(89).
State(111).
State(112).
State(113).
Return(0,114).
State(114).
State(117).
State(118).
State(119).
State(120).
Return(0,121).
State(121).
State(116).
State(122).
State(123).
Return(0,124).
State(124).
State(109).
State(125).
State(126).
Return(0,127).
State(127).
State(132).
State(133).
State(134).
Return(0,135).
State(135).
EqVar("n",138,"&rr.length").
State(138).
State(139).
State(140).
State(141).
Return(0,142).
State(142).
State(137).
State(143).
State(144).
Return(0,145).
State(145).
State(146).
State(147).
Return(0,148).
State(148).
State(151).
State(152).
State(153).
Return(0,154).
State(154).
EqVar("n",157,"&rr.length").
State(157).
State(158).
State(159).
State(160).
Return(0,161).
State(161).
State(156).
State(162).
State(163).
Return(0,164).
State(164).
State(129).
State(165).
State(166).
Return(0,167).
State(167).
State(47).
Eq("tem",169,0).
State(171).
State(172).
State(173).
Return(0,174).
State(174).
EqVar("n",177,"&rr.length").
State(177).
State(178).
State(179).
State(180).
Return(0,181).
State(181).
State(176).
NotEqVar("n",182,"&rr.length").
State(182).
State(183).
Return(0,184).
State(184).
State(169).
State(185).
State(186).
Return(0,187).
State(187).
State(168).
State(190).
State(191).
State(192).
Return(0,193).
State(193).
EqVar("n",196,"&rr.length").
State(196).
State(197).
State(198).
State(199).
Return(0,200).
State(200).
State(195).
NotEqVar("n",201,"&rr.length").
State(201).
State(202).
Return(0,203).
State(203).
State(188).
State(204).
State(205).
Return(0,206).
State(206).
control_flow(49,50) :- EqD("peek",49,0).
control_flow(50,53) :- EqD("peek",49,0).
control_flow(53,54) :- EqD("peek",49,0).
control_flow(54,55) :- EqD("peek",49,0).
control_flow(55,56) :- EqD("peek",49,0).
control_flow(50,58) :- EqD("peek",49,0), NotEqD("peek",50,0).
control_flow(58,59) :- EqD("peek",49,0), NotEqD("peek",50,0), EqVarD("n",58,"&rr.length").
control_flow(59,60) :- EqD("peek",49,0), NotEqD("peek",50,0), EqVarD("n",58,"&rr.length").
control_flow(60,61) :- EqD("peek",49,0), NotEqD("peek",50,0), EqVarD("n",58,"&rr.length").
control_flow(61,62) :- EqD("peek",49,0), NotEqD("peek",50,0), EqVarD("n",58,"&rr.length").
control_flow(62,63) :- EqD("peek",49,0), NotEqD("peek",50,0), EqVarD("n",58,"&rr.length").
control_flow(58,64) :- EqD("peek",49,0), NotEqD("peek",50,0), NotEqVarD("n",58,"&rr.length").
control_flow(64,65) :- EqD("peek",49,0), NotEqD("peek",50,0), NotEqVarD("n",58,"&rr.length").
control_flow(65,66) :- EqD("peek",49,0), NotEqD("peek",50,0), NotEqVarD("n",58,"&rr.length").
control_flow(50,67) :- EqD("peek",49,0), EqD("peek",50,0).
control_flow(67,68) :- EqD("peek",49,0), EqD("peek",50,0).
control_flow(68,69) :- EqD("peek",49,0), EqD("peek",50,0).
control_flow(50,72) :- EqD("peek",49,0).
control_flow(72,73) :- EqD("peek",49,0).
control_flow(73,74) :- EqD("peek",49,0).
control_flow(74,75) :- EqD("peek",49,0).
control_flow(50,77) :- EqD("peek",49,0), NotEqD("peek",50,0).
control_flow(77,78) :- EqD("peek",49,0), NotEqD("peek",50,0), EqVarD("n",77,"&rr.length").
control_flow(78,79) :- EqD("peek",49,0), NotEqD("peek",50,0), EqVarD("n",77,"&rr.length").
control_flow(79,80) :- EqD("peek",49,0), NotEqD("peek",50,0), EqVarD("n",77,"&rr.length").
control_flow(80,81) :- EqD("peek",49,0), NotEqD("peek",50,0), EqVarD("n",77,"&rr.length").
control_flow(81,82) :- EqD("peek",49,0), NotEqD("peek",50,0), EqVarD("n",77,"&rr.length").
control_flow(77,83) :- EqD("peek",49,0), NotEqD("peek",50,0), NotEqVarD("n",77,"&rr.length").
control_flow(83,84) :- EqD("peek",49,0), NotEqD("peek",50,0), NotEqVarD("n",77,"&rr.length").
control_flow(84,85) :- EqD("peek",49,0), NotEqD("peek",50,0), NotEqVarD("n",77,"&rr.length").
control_flow(50,86) :- EqD("peek",49,0), EqD("peek",50,0).
control_flow(86,87) :- EqD("peek",49,0), EqD("peek",50,0).
control_flow(87,88) :- EqD("peek",49,0), EqD("peek",50,0).
control_flow(49,89) :- NotEqD("peek",49,0).
control_flow(89,90) :- NotEqD("peek",49,0).
control_flow(90,92) :- NotEqD("peek",49,0).
control_flow(92,93) :- NotEqD("peek",49,0).
control_flow(93,94) :- NotEqD("peek",49,0).
control_flow(94,95) :- NotEqD("peek",49,0).
control_flow(90,97) :- NotEqD("peek",49,0), NotEqD("peek",90,0).
control_flow(97,98) :- NotEqD("peek",49,0), NotEqD("peek",90,0), EqVarD("n",97,"&rr.length").
control_flow(98,99) :- NotEqD("peek",49,0), NotEqD("peek",90,0), EqVarD("n",97,"&rr.length").
control_flow(99,100) :- NotEqD("peek",49,0), NotEqD("peek",90,0), EqVarD("n",97,"&rr.length").
control_flow(100,101) :- NotEqD("peek",49,0), NotEqD("peek",90,0), EqVarD("n",97,"&rr.length").
control_flow(101,102) :- NotEqD("peek",49,0), NotEqD("peek",90,0), EqVarD("n",97,"&rr.length").
control_flow(97,103) :- NotEqD("peek",49,0), NotEqD("peek",90,0), NotEqVarD("n",97,"&rr.length").
control_flow(103,104) :- NotEqD("peek",49,0), NotEqD("peek",90,0), NotEqVarD("n",97,"&rr.length").
control_flow(104,105) :- NotEqD("peek",49,0), NotEqD("peek",90,0), NotEqVarD("n",97,"&rr.length").
control_flow(90,106) :- NotEqD("peek",49,0), EqD("peek",90,0).
control_flow(106,107) :- NotEqD("peek",49,0), EqD("peek",90,0).
control_flow(107,108) :- NotEqD("peek",49,0), EqD("peek",90,0).
control_flow(89,109) :- NotEqD("peek",49,0).
control_flow(109,111) :- NotEqD("peek",49,0).
control_flow(111,112) :- NotEqD("peek",49,0).
control_flow(112,113) :- NotEqD("peek",49,0).
control_flow(113,114) :- NotEqD("peek",49,0).
control_flow(109,116) :- NotEqD("peek",49,0), NotEqD("peek",109,0).
control_flow(116,117) :- NotEqD("peek",49,0), NotEqD("peek",109,0), EqVarD("n",116,"&rr.length").
control_flow(117,118) :- NotEqD("peek",49,0), NotEqD("peek",109,0), EqVarD("n",116,"&rr.length").
control_flow(118,119) :- NotEqD("peek",49,0), NotEqD("peek",109,0), EqVarD("n",116,"&rr.length").
control_flow(119,120) :- NotEqD("peek",49,0), NotEqD("peek",109,0), EqVarD("n",116,"&rr.length").
control_flow(120,121) :- NotEqD("peek",49,0), NotEqD("peek",109,0), EqVarD("n",116,"&rr.length").
control_flow(116,122) :- NotEqD("peek",49,0), NotEqD("peek",109,0), NotEqVarD("n",116,"&rr.length").
control_flow(122,123) :- NotEqD("peek",49,0), NotEqD("peek",109,0), NotEqVarD("n",116,"&rr.length").
control_flow(123,124) :- NotEqD("peek",49,0), NotEqD("peek",109,0), NotEqVarD("n",116,"&rr.length").
control_flow(109,125) :- NotEqD("peek",49,0), EqD("peek",109,0).
control_flow(125,126) :- NotEqD("peek",49,0), EqD("peek",109,0).
control_flow(126,127) :- NotEqD("peek",49,0), EqD("peek",109,0).
control_flow(47,129) :- EqD("peek",47,0).
control_flow(129,132) :- EqD("peek",47,0).
control_flow(132,133) :- EqD("peek",47,0).
control_flow(133,134) :- EqD("peek",47,0).
control_flow(134,135) :- EqD("peek",47,0).
control_flow(129,137) :- EqD("peek",47,0), NotEqD("peek",129,0).
control_flow(137,138) :- EqD("peek",47,0), NotEqD("peek",129,0).
control_flow(138,139) :- EqD("peek",47,0), NotEqD("peek",129,0).
control_flow(139,140) :- EqD("peek",47,0), NotEqD("peek",129,0).
control_flow(140,141) :- EqD("peek",47,0), NotEqD("peek",129,0).
control_flow(141,142) :- EqD("peek",47,0), NotEqD("peek",129,0).
control_flow(137,143) :- EqD("peek",47,0), NotEqD("peek",129,0).
control_flow(143,144) :- EqD("peek",47,0), NotEqD("peek",129,0).
control_flow(144,145) :- EqD("peek",47,0), NotEqD("peek",129,0).
control_flow(129,146) :- EqD("peek",47,0), EqD("peek",129,0).
control_flow(146,147) :- EqD("peek",47,0), EqD("peek",129,0).
control_flow(147,148) :- EqD("peek",47,0), EqD("peek",129,0).
control_flow(129,151) :- EqD("peek",47,0).
control_flow(151,152) :- EqD("peek",47,0).
control_flow(152,153) :- EqD("peek",47,0).
control_flow(153,154) :- EqD("peek",47,0).
control_flow(129,156) :- EqD("peek",47,0), NotEqD("peek",129,0).
control_flow(156,157) :- EqD("peek",47,0), NotEqD("peek",129,0).
control_flow(157,158) :- EqD("peek",47,0), NotEqD("peek",129,0).
control_flow(158,159) :- EqD("peek",47,0), NotEqD("peek",129,0).
control_flow(159,160) :- EqD("peek",47,0), NotEqD("peek",129,0).
control_flow(160,161) :- EqD("peek",47,0), NotEqD("peek",129,0).
control_flow(156,162) :- EqD("peek",47,0), NotEqD("peek",129,0).
control_flow(162,163) :- EqD("peek",47,0), NotEqD("peek",129,0).
control_flow(163,164) :- EqD("peek",47,0), NotEqD("peek",129,0).
control_flow(129,165) :- EqD("peek",47,0), EqD("peek",129,0).
control_flow(165,166) :- EqD("peek",47,0), EqD("peek",129,0).
control_flow(166,167) :- EqD("peek",47,0), EqD("peek",129,0).
control_flow(47,168) :- NotEqD("peek",47,0).
control_flow(168,169) :- NotEqD("peek",47,0).
control_flow(169,171) :- NotEqD("peek",47,0).
control_flow(171,172) :- NotEqD("peek",47,0).
control_flow(172,173) :- NotEqD("peek",47,0).
control_flow(173,174) :- NotEqD("peek",47,0).
control_flow(169,176) :- NotEqD("peek",47,0), NotEqD("peek",169,0).
control_flow(176,177) :- NotEqD("peek",47,0), NotEqD("peek",169,0).
control_flow(177,178) :- NotEqD("peek",47,0), NotEqD("peek",169,0).
control_flow(178,179) :- NotEqD("peek",47,0), NotEqD("peek",169,0).
control_flow(179,180) :- NotEqD("peek",47,0), NotEqD("peek",169,0).
control_flow(180,181) :- NotEqD("peek",47,0), NotEqD("peek",169,0).
control_flow(176,182) :- NotEqD("peek",47,0), NotEqD("peek",169,0).
control_flow(182,183) :- NotEqD("peek",47,0), NotEqD("peek",169,0).
control_flow(183,184) :- NotEqD("peek",47,0), NotEqD("peek",169,0).
control_flow(169,185) :- NotEqD("peek",47,0), EqD("peek",169,0).
control_flow(185,186) :- NotEqD("peek",47,0), EqD("peek",169,0).
control_flow(186,187) :- NotEqD("peek",47,0), EqD("peek",169,0).
control_flow(168,188) :- NotEqD("peek",47,0).
control_flow(188,190) :- NotEqD("peek",47,0).
control_flow(190,191) :- NotEqD("peek",47,0).
control_flow(191,192) :- NotEqD("peek",47,0).
control_flow(192,193) :- NotEqD("peek",47,0).
control_flow(188,195) :- NotEqD("peek",47,0), NotEqD("peek",188,0).
control_flow(195,196) :- NotEqD("peek",47,0), NotEqD("peek",188,0).
control_flow(196,197) :- NotEqD("peek",47,0), NotEqD("peek",188,0).
control_flow(197,198) :- NotEqD("peek",47,0), NotEqD("peek",188,0).
control_flow(198,199) :- NotEqD("peek",47,0), NotEqD("peek",188,0).
control_flow(199,200) :- NotEqD("peek",47,0), NotEqD("peek",188,0).
control_flow(195,201) :- NotEqD("peek",47,0), NotEqD("peek",188,0).
control_flow(201,202) :- NotEqD("peek",47,0), NotEqD("peek",188,0).
control_flow(202,203) :- NotEqD("peek",47,0), NotEqD("peek",188,0).
control_flow(188,204) :- NotEqD("peek",47,0), EqD("peek",188,0).
control_flow(204,205) :- NotEqD("peek",47,0), EqD("peek",188,0).
control_flow(205,206) :- NotEqD("peek",47,0), EqD("peek",188,0).
//AG((("peek"!=0)∧"tem"=0 => AF(SSL3_RECORD_set_read())))
.decl Start(x:number)
.decl State(x:number)
.decl flow(x:number,y:number)
.decl control_flow(x:number,y:number)
.decl transFlow(x:number,y:number)
.decl NotTotal(loc:number)
.decl Return(n0:number,n1:number)
.decl SSL3_RECORD_set_read(n0:number)
.decl NotEqVar(x:symbol,loc:number,y:symbol)
.decl Eq(x:symbol,loc:number,n:number)
.decl EqVar(x:symbol,loc:number,y:symbol)
.decl NotEq(x:symbol,loc:number,n:number)
.decl NotEqVarD(x:symbol,loc:number,y:symbol)
.decl EqVarD(x:symbol,loc:number,y:symbol)
.decl NotEqD(x:symbol,loc:number,n:number)
.decl EqD(x:symbol,loc:number,n:number)
.decl SSL3_RECORD_set_readPred(loc:number)
.decl AF_SSL3_RECORD_set_readPred_T(interm_state:number,loc:number)
.decl AF_SSL3_RECORD_set_readPred_S(loc:number)
.decl AF_SSL3_RECORD_set_readPred(loc:number)
.decl tem_eq_0(loc:number)
.decl peek_neq_0(loc:number)
.decl peek_neq_0_AND_tem_eq_0(loc:number)
.decl peek_neq_0_AND_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc:number)
.decl NOT_peek_neq_0_AND_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc:number)
.decl EF_NOT_peek_neq_0_AND_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc:number)
.decl AG_peek_neq_0_AND_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc:number)
.decl AG_peek_neq_0_AND_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred_Final(loc:number)transFlow(x,y) :- control_flow(x,y).
transFlow(x,z) :- control_flow(x,y), transFlow(y,z).
NotTotal(loc) :- State(loc), !control_flow(loc,_).
NotTotal(loc) :- NotTotal(locI), control_flow(loc,locI).
control_flow(x,y) :- flow(x,y).
NotEqVarD(x,loc,n) :- NotEqVar(x,loc,n).
NotEqVarD(x,loc,n) :- NotEqVarD(x,locI,n), control_flow(locI,loc), !NotEqVar(x,loc,_), !EqVar(x,loc,_).
EqVarD(x,loc,n) :- EqVar(x,loc,n).
EqVarD(x,loc,n) :- EqVarD(x,locI,n), control_flow(locI,loc), !EqVar(x,loc,_), !NotEqVar(x,loc,_).
NotEqD(x,loc,n) :- NotEq(x,loc,n).
NotEqD(x,loc,n) :- NotEqD(x,locI,n), control_flow(locI,loc), !NotEq(x,loc,_), !Eq(x,loc,_).
EqD(x,loc,n) :- Eq(x,loc,n).
EqD(x,loc,n) :- EqD(x,locI,n), control_flow(locI,loc), !Eq(x,loc,_), !NotEq(x,loc,_).
SSL3_RECORD_set_readPred(loc) :- State(loc), SSL3_RECORD_set_read(loc).
AF_SSL3_RECORD_set_readPred_T(interm_state,loc) :- AF_SSL3_RECORD_set_readPred_T(tempOne,loc), !SSL3_RECORD_set_readPred(tempOne), control_flow(tempOne,interm_state).
AF_SSL3_RECORD_set_readPred_T(interm_state,loc) :- !SSL3_RECORD_set_readPred(loc), control_flow(loc,interm_state).
AF_SSL3_RECORD_set_readPred_S(loc) :- !SSL3_RECORD_set_readPred(loc), control_flow(loc,tempOne), AF_SSL3_RECORD_set_readPred_S(tempOne).
AF_SSL3_RECORD_set_readPred_S(loc) :- AF_SSL3_RECORD_set_readPred_T(loc,loc).
AF_SSL3_RECORD_set_readPred(loc) :- State(loc), !AF_SSL3_RECORD_set_readPred_S(loc).
tem_eq_0(loc) :- State(loc), Eq("tem",loc,0).
peek_neq_0(loc) :- State(loc), NotEqD("peek",loc,0).
peek_neq_0_AND_tem_eq_0(loc) :- peek_neq_0(loc), tem_eq_0(loc).
peek_neq_0_AND_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc) :- State(loc), !peek_neq_0_AND_tem_eq_0(loc).
peek_neq_0_AND_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc) :- AF_SSL3_RECORD_set_readPred(loc).
NOT_peek_neq_0_AND_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc) :- State(loc), !peek_neq_0_AND_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc).
EF_NOT_peek_neq_0_AND_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc) :- control_flow(loc,tempOne), EF_NOT_peek_neq_0_AND_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(tempOne).
EF_NOT_peek_neq_0_AND_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc) :- NOT_peek_neq_0_AND_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc).
AG_peek_neq_0_AND_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc) :- State(loc), !EF_NOT_peek_neq_0_AND_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc).
AG_peek_neq_0_AND_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred_Final(loc) :- Start(loc), AG_peek_neq_0_AND_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc), !NotTotal(loc).
.output NotEqVar
.output Eq
.output EqVar
.output NotEq
.output Start
.output State
.output flow
.output Return
.output AG_peek_neq_0_AND_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred_Final(IO=stdout)

/* Other information 

//-- Facts for Procedure <SSL3_RECORD_get_length> 

//-- Facts for Procedure <main> 

Flow(41,0). //@46:1-47:5
Flow(39,40). //@86:5-87:1
Flow(38,39). //@81:9-86:5
Flow(30,38). //@76:9-81:9
Flow(27,36). //@76:13-76:13
Flow(27,37). //@76:13-76:13
Flow(37,28). //@76:13-78:13
Flow(36,34). //@76:13-77:17
Flow(36,35). //@76:13-77:17
Flow(35,33). //@77:17-77:25
Flow(34,30). //@77:17-76:9
Flow(33,31). //@77:25-77:25
Flow(33,32). //@77:25-77:25
Flow(32,28). //@77:25-78:13
Flow(31,30). //@77:25-76:9
Flow(29,30). //@79:13-76:9
Flow(28,29). //@78:13-79:13
Flow(17,27). //@60:9-76:13
Flow(10,18). //@60:14-61:13
Flow(11,12). //@60:14-70:13
Flow(24,17). //@63:13-60:9
Flow(20,25). //@63:17-63:17
Flow(20,26). //@63:17-63:17
Flow(26,21). //@63:17-64:17
Flow(25,24). //@63:17-63:13
Flow(23,24). //@66:17-63:13
Flow(22,23). //@65:17-66:17
Flow(21,22). //@64:17-65:17
Flow(19,20). //@62:13-63:17
Flow(18,19). //@61:13-62:13
Flow(15,17). //@71:13-60:9
Flow(13,14). //@71:17-71:17
Flow(13,16). //@71:17-71:17
Flow(16,15). //@71:17-71:13
Flow(14,15). //@71:17-71:13
Flow(12,13). //@70:13-71:17
Flow(6,11). //@56:9-60:14
Flow(6,10). //@56:9-60:14
Flow(4,8). //@56:13-56:13
Flow(4,9). //@56:13-56:13
Flow(9,7). //@56:13-57:13
Flow(8,5). //@56:13-59:13
Flow(7,6). //@57:13-56:9
Flow(5,6). //@59:13-56:9
Flow(3,4). //@54:5-56:13
Flow(2,3). //@50:5-54:5
Flow(1,2). //@48:5-50:5
Flow(0,1). //@47:5-48:5
Stmt_Decl(0,[IStore(&len,2)]). // @47:5
Stmt_Decl(1,[IStore(&peek,1)]). // @48:5
Stmt_Decl(2,[IStore(&type,23)]). // @50:5
Stmt_BinaryOperatorStmt(3,Assign,[IStore(&read_bytes,()0)]). // @54:5
Stmt_BinaryOperatorStmt(5,Assign,[ILoad(&len,n$39),ILoad(&read_bytes,n$40),IStore(&n,(()n$39 - n$40))]). // @59:13
Stmt_BinaryOperatorStmt(7,Assign,[ILoad(&rr,n$37),ILoad(n$37.length,n$38),IStore(&n,n$38)]). // @57:13
PruneNode(8,false,[Prune(!((()n$33 - n$34) > n$36), false)]). // @56:13
PruneNode(9,true,[Prune(((()n$33 - n$34) > n$36), true)]). // @56:13
Stmt_BinaryOperatorStmt(4,GT,[ILoad(&len,n$33),ILoad(&read_bytes,n$34),ILoad(&rr,n$35),ILoad(n$35.length,n$36)]). // @56:13
Join(6,[]).  // @56:9
Stmt_Decl(12,[ILoad(&rr,n$30),ICall(_fun_SSL3_RECORD_get_length,n$30,n$31),IStore(&tem,n$31)]). // @70:13
PruneNode(14,false,[Prune(!(n$26 == 0), false)]). // @71:17
PruneNode(16,true,[Prune((n$26 == 0), true)]). // @71:17
Stmt_BinaryOperatorStmt(13,EQ,[ILoad(&tem,n$26)]). // @71:17
Join(15,[]).  // @71:13
Stmt_BinaryOperatorStmt(18,SubAssign,[ILoad(&rr,n$23),ILoad(&n,n$24),ILoad(n$23.length,n$25),IStore(n$23.length,(n$25 - n$24))]). // @61:13
Stmt_BinaryOperatorStmt(19,AddAssign,[ILoad(&rr,n$20),ILoad(&n,n$21),ILoad(n$20.off,n$22),IStore(n$20.off,(n$22 + n$21))]). // @62:13
Stmt_BinaryOperatorStmt(21,Assign,[ILoad(&s,n$17),IStore(n$17.rlayer.rstate,240)]). // @64:17
Stmt_BinaryOperatorStmt(22,Assign,[ILoad(&rr,n$16),IStore(n$16.off,()0)]). // @65:17
Stmt_BinaryOperatorStmt(23,Assign,[ILoad(&rr,n$15),IStore(n$15.read,()1)]). // @66:17
PruneNode(25,false,[Prune(!(n$14 == ()0), false)]). // @63:17
PruneNode(26,true,[Prune((n$14 == ()0), true)]). // @63:17
Stmt_BinaryOperatorStmt(20,EQ,[ILoad(&rr,n$13),ILoad(n$13.length,n$14)]). // @63:17
Join(24,[]).  // @63:13
PruneNode(11,false,[ILoad(&peek,n$12),Prune(n$12, false)]). // @60:14
PruneNode(10,true,[ILoad(&peek,n$12),Prune(!n$12, true)]). // @60:14
Join(17,[]).  // @60:9
Stmt_UnaryOperator(28,[ILoad(&curr_rec,n$9),IStore(&curr_rec,(n$9 + 1))]). // @78:13
Stmt_UnaryOperator(29,[ILoad(&rr,n$8),IStore(&rr,(n$8 + 1))]). // @79:13
PruneNode(31,false,[Prune(!(n$5 == n$7), false)]). // @77:25
PruneNode(32,true,[Prune((n$5 == n$7), true)]). // @77:25
Stmt_BinaryOperatorStmt(33,EQ,[ILoad(&n,n$5),ILoad(&rr,n$6),ILoad(n$6.length,n$7)]). // @77:25
PruneNode(34,false,[ILoad(&peek,n$4),Prune(!n$4, false)]). // @77:17
PruneNode(35,true,[ILoad(&peek,n$4),Prune(n$4, true)]). // @77:17
PruneNode(36,false,[Prune(!(n$3 == ()0), false)]). // @76:13
PruneNode(37,true,[Prune((n$3 == ()0), true)]). // @76:13
Stmt_BinaryOperatorStmt(27,EQ,[ILoad(&rr,n$2),ILoad(n$2.length,n$3)]). // @76:13
Join(30,[]).  // @76:9
Stmt_BinaryOperatorStmt(38,AddAssign,[ILoad(&n,n$0),ILoad(&read_bytes,n$1),IStore(&read_bytes,(n$1 + n$0))]). // @81:9
Stmt_Return(39,[IStore(&return,0)]). // @86:5
Exit(40).  // @87:1
Start(41). // @46:1
*/

