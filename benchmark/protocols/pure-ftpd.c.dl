/*(Join())@0*/
/*(Join())@0*/

State(0).

/*(Join())@0*/
/*(Join())@0*/

State(0).

/*(Start())@1 · (overflow=0)@2 · (activated=_)@3 · (user_quota_size=_)@4 · (quota_size=_)@5 · (max_filesize=-1)@6 · (temp=_)@7 · (ret=-1)@8 · (([max_filesize>=0]@10 · (([temp<0]@12 · (overflow=1)@13) \/ ([!(temp<0)]@28))) \/ ([!(max_filesize>=0)]@30)) · (Join())@14 · (([overflow>0]@16 · (addreply(552))@17) \/ ([(overflow<=0)]@21 · (([ret=0]@23 · (addreply(226))@24) \/ ([(ret!=0)]@26 · (addreply(451))@27)))) · (Join())@18 · ((Return(-1))@19)^w*/
/*(Start())@1 · (overflow=0)@2 · (activated=_)@3 · (user_quota_size=_)@4 · (quota_size=_)@5 · (max_filesize=-1)@6 · (temp=_)@7 · (ret=-1)@8 · (([max_filesize>=0]@10 · (([temp<0]@12 · (overflow=1)@13) \/ ([!(temp<0)]@28)) · (Join())@31 · (([overflow>0]@32 · (addreply(552))@33) \/ ([(overflow<=0)]@34 · (([ret=0]@35 · (addreply(226))@36) \/ ([(ret!=0)]@37 · (addreply(451))@38)))) · (Join())@39 · ((Return(-1))@40)^w) \/ ([!(max_filesize>=0)]@30 · (Join())@14 · (([overflow>0]@16 · (addreply(552))@17) \/ ([(overflow<=0)]@21 · (([ret=0]@23 · (addreply(226))@24) \/ ([(ret!=0)]@26 · (addreply(451))@27)))) · (Join())@18 · ((Return(-1))@19)^w))*/

flow(1,2).
flow(2,3).
flow(3,4).
flow(4,5).
flow(5,6).
flow(6,7).
flow(7,8).
flow(39,40).
flow(40,40).
flow(18,19).
flow(19,19).
Start(1).
Lt("temp",1,0).
GtEq("max_filesize",1,0).
GtEq("temp",1,0).
Gt("overflow",1,0).
Eq("ret",1,0).
Lt("max_filesize",1,0).
LtEq("overflow",1,0).
NotEq("ret",1,0).
State(1).
LtEq("overflow",2,0).
State(2).
State(3).
State(4).
State(5).
//Lt("max_filesize",6,0). // repair is to change this line to: GtEq("max_filesize",6,0).
State(6).
State(7).
NotEq("ret",8,0).
State(12).
Gt("overflow",13,0).
State(13).
State(32).
addreply(552,33).
State(33).
State(39).
Return(-1,40).
State(40).
State(31).
State(35).
addreply(226,36).
State(36).
State(34).
State(37).
addreply(451,38).
State(38).
State(10).
State(28).
State(8).
State(30).
State(16).
addreply(552,17).
State(17).
State(18).
Return(-1,19).
State(19).
State(14).
State(23).
addreply(226,24).
State(24).
State(21).
State(26).
addreply(451,27).
State(27).
control_flow(8,10) :- GtEqD("max_filesize",8,0).
control_flow(10,12) :- GtEqD("max_filesize",10,0), LtD("temp",10,0).
control_flow(12,13) :- GtEqD("max_filesize",12,0), LtD("temp",12,0).
control_flow(13,31) :- GtEqD("max_filesize",13,0), LtD("temp",13,0).
control_flow(31,32) :- GtD("overflow",31,0).
control_flow(32,33) :- GtD("overflow",32,0).
control_flow(33,39) :- GtD("overflow",33,0).
control_flow(31,34) :- LtEqD("overflow",31,0).
control_flow(34,35) :- LtEqD("overflow",34,0), EqD("ret",34,0).
control_flow(35,36) :- LtEqD("overflow",35,0), EqD("ret",35,0).
control_flow(36,39) :- LtEqD("overflow",36,0), EqD("ret",36,0).
control_flow(34,37) :- LtEqD("overflow",34,0), NotEqD("ret",34,0).
control_flow(37,38) :- LtEqD("overflow",37,0), NotEqD("ret",37,0).
control_flow(38,39) :- LtEqD("overflow",38,0), NotEqD("ret",38,0).
control_flow(10,28) :- GtEqD("max_filesize",10,0), GtEqD("temp",10,0).
control_flow(28,31) :- GtEqD("max_filesize",28,0), GtEqD("temp",28,0).
control_flow(8,30) :- LtD("max_filesize",8,0).
control_flow(30,14) :- LtD("max_filesize",30,0).
control_flow(14,16) :- GtD("overflow",14,0).
control_flow(16,17) :- GtD("overflow",16,0).
control_flow(17,18) :- GtD("overflow",17,0).
control_flow(14,21) :- LtEqD("overflow",14,0).
control_flow(21,23) :- LtEqD("overflow",21,0), EqD("ret",21,0).
control_flow(23,24) :- LtEqD("overflow",23,0), EqD("ret",23,0).
control_flow(24,18) :- LtEqD("overflow",24,0), EqD("ret",24,0).
control_flow(21,26) :- LtEqD("overflow",21,0), NotEqD("ret",21,0).
control_flow(26,27) :- LtEqD("overflow",26,0), NotEqD("ret",26,0).
control_flow(27,18) :- LtEqD("overflow",27,0), NotEqD("ret",27,0).
//AG(("temp"<0 => AF("overflow">0)))
.decl Start(x:number)
.decl State(x:number)
.decl flow(x:number,y:number)
.decl control_flow(x:number,y:number)
.decl transFlow(x:number,y:number)
.decl NotTotal(loc:number)
.decl Return(n0:number,n1:number)
.decl addreply(n0:number,n1:number)
.decl NotEq(x:symbol,loc:number,n:number)
.decl LtEq(x:symbol,loc:number,n:number)
.decl Eq(x:symbol,loc:number,n:number)
.decl Gt(x:symbol,loc:number,n:number)
.decl GtEq(x:symbol,loc:number,n:number)
.decl Lt(x:symbol,loc:number,n:number)
.decl NotEqD(x:symbol,loc:number,n:number)
.decl EqD(x:symbol,loc:number,n:number)
.decl LtEqD(x:symbol,loc:number,n:number)
.decl GtD(x:symbol,loc:number,n:number)
.decl LtD(x:symbol,loc:number,n:number)
.decl GtEqD(x:symbol,loc:number,n:number)
.decl overflow_gt_0(loc:number)
.decl AF_overflow_gt_0_T(interm_state:number,loc:number)
.decl AF_overflow_gt_0_S(loc:number)
.decl AF_overflow_gt_0(loc:number)
.decl temp_lt_0(loc:number)
.decl temp_lt_0_IMPLY_AF_overflow_gt_0(loc:number)
.decl NOT_temp_lt_0_IMPLY_AF_overflow_gt_0(loc:number)
.decl EF_NOT_temp_lt_0_IMPLY_AF_overflow_gt_0(loc:number)
.decl AG_temp_lt_0_IMPLY_AF_overflow_gt_0(loc:number)
.decl AG_temp_lt_0_IMPLY_AF_overflow_gt_0_Final(loc:number)transFlow(x,y) :- control_flow(x,y).
transFlow(x,z) :- control_flow(x,y), transFlow(y,z).
NotTotal(loc) :- State(loc), !control_flow(loc,_).
NotTotal(loc) :- NotTotal(locI), control_flow(loc,locI).
control_flow(x,y) :- flow(x,y).
NotEqD(x,loc,n) :- NotEq(x,loc,n).
NotEqD(x,loc,n) :- NotEqD(x,locI,n), control_flow(locI,loc), !NotEq(x,loc,_), !Eq(x,loc,_).
EqD(x,loc,n) :- Eq(x,loc,n).
EqD(x,loc,n) :- EqD(x,locI,n), control_flow(locI,loc), !Eq(x,loc,_), !NotEq(x,loc,_).
LtEqD(x,loc,n) :- LtEq(x,loc,n).
LtEqD(x,loc,n) :- LtEqD(x,locI,n), control_flow(locI,loc), !LtEq(x,loc,_), !Gt(x,loc,_).
GtD(x,loc,n) :- Gt(x,loc,n).
GtD(x,loc,n) :- GtD(x,locI,n), control_flow(locI,loc), !Gt(x,loc,_), !LtEq(x,loc,_).
LtD(x,loc,n) :- Lt(x,loc,n).
LtD(x,loc,n) :- LtD(x,locI,n), control_flow(locI,loc), !Lt(x,loc,_), !GtEq(x,loc,_).
GtEqD(x,loc,n) :- GtEq(x,loc,n).
GtEqD(x,loc,n) :- GtEqD(x,locI,n), control_flow(locI,loc), !GtEq(x,loc,_), !Lt(x,loc,_).
overflow_gt_0(loc) :- State(loc), GtD("overflow",loc,0).
AF_overflow_gt_0_T(interm_state,loc) :- AF_overflow_gt_0_T(tempOne,loc), !overflow_gt_0(tempOne), control_flow(tempOne,interm_state).
AF_overflow_gt_0_T(interm_state,loc) :- !overflow_gt_0(loc), control_flow(loc,interm_state).
AF_overflow_gt_0_S(loc) :- !overflow_gt_0(loc), control_flow(loc,tempOne), AF_overflow_gt_0_S(tempOne).
AF_overflow_gt_0_S(loc) :- AF_overflow_gt_0_T(loc,loc).
AF_overflow_gt_0(loc) :- State(loc), !AF_overflow_gt_0_S(loc).
temp_lt_0(loc) :- State(loc), LtD("temp",loc,0).
temp_lt_0_IMPLY_AF_overflow_gt_0(loc) :- State(loc), !temp_lt_0(loc).
temp_lt_0_IMPLY_AF_overflow_gt_0(loc) :- AF_overflow_gt_0(loc).
NOT_temp_lt_0_IMPLY_AF_overflow_gt_0(loc) :- State(loc), !temp_lt_0_IMPLY_AF_overflow_gt_0(loc).
EF_NOT_temp_lt_0_IMPLY_AF_overflow_gt_0(loc) :- control_flow(loc,tempOne), EF_NOT_temp_lt_0_IMPLY_AF_overflow_gt_0(tempOne).
EF_NOT_temp_lt_0_IMPLY_AF_overflow_gt_0(loc) :- NOT_temp_lt_0_IMPLY_AF_overflow_gt_0(loc).
AG_temp_lt_0_IMPLY_AF_overflow_gt_0(loc) :- State(loc), !EF_NOT_temp_lt_0_IMPLY_AF_overflow_gt_0(loc).
AG_temp_lt_0_IMPLY_AF_overflow_gt_0_Final(loc) :- Start(loc), AG_temp_lt_0_IMPLY_AF_overflow_gt_0(loc), !NotTotal(loc).
.output NotEq
.output LtEq
.output Eq
.output Gt
.output GtEq
.output Lt
.output Start
.output State
.output flow
.output Return
.output addreply
.output AG_temp_lt_0_IMPLY_AF_overflow_gt_0_Final(IO=stdout)

