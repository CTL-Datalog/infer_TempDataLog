/*𝝐 */


/*𝝐 */


/*𝝐 */


/*𝝐 */


/*(Start())@0 · ("len"=2)@1 · ("peek"=_)@2 · ("type"=23)@3 · ("n"=_)@4 · ("rr"=_)@5 · ((("n"="&rr.length")@6 · ((["peek"=0]@7 · ("peek"=0)@8 · ((((("curr_rec"=("curr_rec"+1))@9 · ("rr"=("rr"+1))@10 · ("read_bytes"=("read_bytes"+"n"))@11 · (Return(0))@12) \/ ((([("peek"!=0)]@13 · (("peek"!=0))@14 · ((["n"="&rr.length"]@15 · ("n"="&rr.length")@16 · ("curr_rec"=("curr_rec"+1))@17 · ("rr"=("rr"+1))@18 · ("read_bytes"=("read_bytes"+"n"))@19 · (Return(0))@20) \/ ([("n"!="&rr.length")]@21 · (("n"!="&rr.length"))@22 · ("read_bytes"=("read_bytes"+"n"))@23 · (Return(0))@24))) \/ (["peek"=0]@25 · ("peek"=0)@26 · ("read_bytes"=("read_bytes"+"n"))@27 · (Return(0))@28))))) \/ (((("curr_rec"=("curr_rec"+1))@29 · ("rr"=("rr"+1))@30 · ("read_bytes"=("read_bytes"+"n"))@31 · (Return(0))@32) \/ ((([("peek"!=0)]@33 · (("peek"!=0))@34 · ((["n"="&rr.length"]@35 · ("n"="&rr.length")@36 · ("curr_rec"=("curr_rec"+1))@37 · ("rr"=("rr"+1))@38 · ("read_bytes"=("read_bytes"+"n"))@39 · (Return(0))@40) \/ ([("n"!="&rr.length")]@41 · (("n"!="&rr.length"))@42 · ("read_bytes"=("read_bytes"+"n"))@43 · (Return(0))@44))) \/ (["peek"=0]@45 · ("peek"=0)@46 · ("read_bytes"=("read_bytes"+"n"))@47 · (Return(0))@48))))))) \/ ([("peek"!=0)]@49 · (("peek"!=0))@50 · ("tem"=_)@51 · ((("tem"=0)@52 · (SSL3_RECORD_set_read())@53 · ("tem"=1)@54 · ((("curr_rec"=("curr_rec"+1))@55 · ("rr"=("rr"+1))@56 · ("read_bytes"=("read_bytes"+"n"))@57 · (Return(0))@58) \/ ((([("peek"!=0)]@59 · (("peek"!=0))@60 · ((["n"="&rr.length"]@61 · ("n"="&rr.length")@62 · ("curr_rec"=("curr_rec"+1))@63 · ("rr"=("rr"+1))@64 · ("read_bytes"=("read_bytes"+"n"))@65 · (Return(0))@66) \/ ([("n"!="&rr.length")]@67 · (("n"!="&rr.length"))@68 · ("read_bytes"=("read_bytes"+"n"))@69 · (Return(0))@70))) \/ (["peek"=0]@71 · ("peek"=0)@72 · ("read_bytes"=("read_bytes"+"n"))@73 · (Return(0))@74))))) \/ ((("tem"!=0))@75 · ((("curr_rec"=("curr_rec"+1))@76 · ("rr"=("rr"+1))@77 · ("read_bytes"=("read_bytes"+"n"))@78 · (Return(0))@79) \/ ((([("peek"!=0)]@80 · (("peek"!=0))@81 · ((["n"="&rr.length"]@82 · ("n"="&rr.length")@83 · ("curr_rec"=("curr_rec"+1))@84 · ("rr"=("rr"+1))@85 · ("read_bytes"=("read_bytes"+"n"))@86 · (Return(0))@87) \/ ([("n"!="&rr.length")]@88 · (("n"!="&rr.length"))@89 · ("read_bytes"=("read_bytes"+"n"))@90 · (Return(0))@91))) \/ (["peek"=0]@92 · ("peek"=0)@93 · ("read_bytes"=("read_bytes"+"n"))@94 · (Return(0))@95))))))))) \/ (((["peek"=0]@96 · ("peek"=0)@97 · ((((("curr_rec"=("curr_rec"+1))@98 · ("rr"=("rr"+1))@99 · ("read_bytes"=("read_bytes"+"n"))@100 · (Return(0))@101) \/ ((([("peek"!=0)]@102 · (("peek"!=0))@103 · ((["n"="&rr.length"]@104 · ("n"="&rr.length")@105 · ("curr_rec"=("curr_rec"+1))@106 · ("rr"=("rr"+1))@107 · ("read_bytes"=("read_bytes"+"n"))@108 · (Return(0))@109) \/ ([("n"!="&rr.length")]@110 · (("n"!="&rr.length"))@111 · ("read_bytes"=("read_bytes"+"n"))@112 · (Return(0))@113))) \/ (["peek"=0]@114 · ("peek"=0)@115 · ("read_bytes"=("read_bytes"+"n"))@116 · (Return(0))@117))))) \/ (((("curr_rec"=("curr_rec"+1))@118 · ("rr"=("rr"+1))@119 · ("read_bytes"=("read_bytes"+"n"))@120 · (Return(0))@121) \/ ((([("peek"!=0)]@122 · (("peek"!=0))@123 · ((["n"="&rr.length"]@124 · ("n"="&rr.length")@125 · ("curr_rec"=("curr_rec"+1))@126 · ("rr"=("rr"+1))@127 · ("read_bytes"=("read_bytes"+"n"))@128 · (Return(0))@129) \/ ([("n"!="&rr.length")]@130 · (("n"!="&rr.length"))@131 · ("read_bytes"=("read_bytes"+"n"))@132 · (Return(0))@133))) \/ (["peek"=0]@134 · ("peek"=0)@135 · ("read_bytes"=("read_bytes"+"n"))@136 · (Return(0))@137))))))) \/ ([("peek"!=0)]@138 · (("peek"!=0))@139 · ("tem"=_)@140 · ((("tem"=0)@141 · (SSL3_RECORD_set_read())@142 · ("tem"=1)@143 · ((("curr_rec"=("curr_rec"+1))@144 · ("rr"=("rr"+1))@145 · ("read_bytes"=("read_bytes"+"n"))@146 · (Return(0))@147) \/ ((([("peek"!=0)]@148 · (("peek"!=0))@149 · ((["n"="&rr.length"]@150 · ("n"="&rr.length")@151 · ("curr_rec"=("curr_rec"+1))@152 · ("rr"=("rr"+1))@153 · ("read_bytes"=("read_bytes"+"n"))@154 · (Return(0))@155) \/ ([("n"!="&rr.length")]@156 · (("n"!="&rr.length"))@157 · ("read_bytes"=("read_bytes"+"n"))@158 · (Return(0))@159))) \/ (["peek"=0]@160 · ("peek"=0)@161 · ("read_bytes"=("read_bytes"+"n"))@162 · (Return(0))@163))))) \/ ((("tem"!=0))@164 · ((("curr_rec"=("curr_rec"+1))@165 · ("rr"=("rr"+1))@166 · ("read_bytes"=("read_bytes"+"n"))@167 · (Return(0))@168) \/ ((([("peek"!=0)]@169 · (("peek"!=0))@170 · ((["n"="&rr.length"]@171 · ("n"="&rr.length")@172 · ("curr_rec"=("curr_rec"+1))@173 · ("rr"=("rr"+1))@174 · ("read_bytes"=("read_bytes"+"n"))@175 · (Return(0))@176) \/ ([("n"!="&rr.length")]@177 · (("n"!="&rr.length"))@178 · ("read_bytes"=("read_bytes"+"n"))@179 · (Return(0))@180))) \/ (["peek"=0]@181 · ("peek"=0)@182 · ("read_bytes"=("read_bytes"+"n"))@183 · (Return(0))@184))))))))))*/

flow(0,1).
flow(1,2).
flow(2,3).
flow(3,4).
flow(4,5).
flow(5,6).
flow(7,8).
flow(8,9).
flow(9,10).
flow(10,11).
flow(11,12).
flow(12,12).
flow(13,14).
flow(15,16).
flow(16,17).
flow(17,18).
flow(18,19).
flow(19,20).
flow(20,20).
flow(21,22).
flow(22,23).
flow(23,24).
flow(24,24).
flow(25,26).
flow(26,27).
flow(27,28).
flow(28,28).
flow(8,29).
flow(29,30).
flow(30,31).
flow(31,32).
flow(32,32).
flow(33,34).
flow(35,36).
flow(36,37).
flow(37,38).
flow(38,39).
flow(39,40).
flow(40,40).
flow(41,42).
flow(42,43).
flow(43,44).
flow(44,44).
flow(45,46).
flow(46,47).
flow(47,48).
flow(48,48).
flow(49,50).
flow(50,51).
flow(51,52).
flow(52,53).
flow(53,54).
flow(54,55).
flow(55,56).
flow(56,57).
flow(57,58).
flow(58,58).
flow(59,60).
flow(61,62).
flow(62,63).
flow(63,64).
flow(64,65).
flow(65,66).
flow(66,66).
flow(67,68).
flow(68,69).
flow(69,70).
flow(70,70).
flow(71,72).
flow(72,73).
flow(73,74).
flow(74,74).
flow(51,75).
flow(75,76).
flow(76,77).
flow(77,78).
flow(78,79).
flow(79,79).
flow(80,81).
flow(82,83).
flow(83,84).
flow(84,85).
flow(85,86).
flow(86,87).
flow(87,87).
flow(88,89).
flow(89,90).
flow(90,91).
flow(91,91).
flow(92,93).
flow(93,94).
flow(94,95).
flow(95,95).
flow(96,97).
flow(97,98).
flow(98,99).
flow(99,100).
flow(100,101).
flow(101,101).
flow(102,103).
flow(104,105).
flow(105,106).
flow(106,107).
flow(107,108).
flow(108,109).
flow(109,109).
flow(110,111).
flow(111,112).
flow(112,113).
flow(113,113).
flow(114,115).
flow(115,116).
flow(116,117).
flow(117,117).
flow(97,118).
flow(118,119).
flow(119,120).
flow(120,121).
flow(121,121).
flow(122,123).
flow(124,125).
flow(125,126).
flow(126,127).
flow(127,128).
flow(128,129).
flow(129,129).
flow(130,131).
flow(131,132).
flow(132,133).
flow(133,133).
flow(134,135).
flow(135,136).
flow(136,137).
flow(137,137).
flow(138,139).
flow(139,140).
flow(140,141).
flow(141,142).
flow(142,143).
flow(143,144).
flow(144,145).
flow(145,146).
flow(146,147).
flow(147,147).
flow(148,149).
flow(150,151).
flow(151,152).
flow(152,153).
flow(153,154).
flow(154,155).
flow(155,155).
flow(156,157).
flow(157,158).
flow(158,159).
flow(159,159).
flow(160,161).
flow(161,162).
flow(162,163).
flow(163,163).
flow(140,164).
flow(164,165).
flow(165,166).
flow(166,167).
flow(167,168).
flow(168,168).
flow(169,170).
flow(171,172).
flow(172,173).
flow(173,174).
flow(174,175).
flow(175,176).
flow(176,176).
flow(177,178).
flow(178,179).
flow(179,180).
flow(180,180).
flow(181,182).
flow(182,183).
flow(183,184).
flow(184,184).
Start(0).
State(0).
State(1).
NotEq("peek",2,0).
Eq("peek",2,0).
State(2).
State(3).
NotEqVar("n",4,"&rr.length").
EqVar("n",4,"&rr.length").
State(4).
EqVar("n",6,"&rr.length").
State(7).
Eq("peek",8,0).
State(9).
State(10).
State(11).
Return(0,12).
State(12).
State(13).
NotEq("peek",14,0).
State(15).
EqVar("n",16,"&rr.length").
State(16).
State(17).
State(18).
State(19).
Return(0,20).
State(20).
State(14).
State(21).
NotEqVar("n",22,"&rr.length").
State(22).
State(23).
Return(0,24).
State(24).
State(25).
Eq("peek",26,0).
State(26).
State(27).
Return(0,28).
State(28).
State(29).
State(30).
State(31).
Return(0,32).
State(32).
State(33).
NotEq("peek",34,0).
State(35).
EqVar("n",36,"&rr.length").
State(36).
State(37).
State(38).
State(39).
Return(0,40).
State(40).
State(34).
State(41).
NotEqVar("n",42,"&rr.length").
State(42).
State(43).
Return(0,44).
State(44).
State(8).
State(45).
Eq("peek",46,0).
State(46).
State(47).
Return(0,48).
State(48).
State(6).
State(49).
NotEq("peek",50,0).
State(50).
Eq("tem",52,0).
State(52).
SSL3_RECORD_set_read(53).
State(53).
NotEq("tem",54,0).
State(55).
State(56).
State(57).
Return(0,58).
State(58).
State(59).
NotEq("peek",60,0).
State(61).
EqVar("n",62,"&rr.length").
State(62).
State(63).
State(64).
State(65).
Return(0,66).
State(66).
State(60).
State(67).
NotEqVar("n",68,"&rr.length").
State(68).
State(69).
Return(0,70).
State(70).
State(54).
State(71).
Eq("peek",72,0).
State(72).
State(73).
Return(0,74).
State(74).
State(51).
NotEq("tem",75,0).
State(76).
State(77).
State(78).
Return(0,79).
State(79).
State(80).
NotEq("peek",81,0).
State(82).
EqVar("n",83,"&rr.length").
State(83).
State(84).
State(85).
State(86).
Return(0,87).
State(87).
State(81).
State(88).
NotEqVar("n",89,"&rr.length").
State(89).
State(90).
Return(0,91).
State(91).
State(75).
State(92).
Eq("peek",93,0).
State(93).
State(94).
Return(0,95).
State(95).
State(96).
Eq("peek",97,0).
State(98).
State(99).
State(100).
Return(0,101).
State(101).
State(102).
NotEq("peek",103,0).
State(104).
EqVar("n",105,"&rr.length").
State(105).
State(106).
State(107).
State(108).
Return(0,109).
State(109).
State(103).
State(110).
NotEqVar("n",111,"&rr.length").
State(111).
State(112).
Return(0,113).
State(113).
State(114).
Eq("peek",115,0).
State(115).
State(116).
Return(0,117).
State(117).
State(118).
State(119).
State(120).
Return(0,121).
State(121).
State(122).
NotEq("peek",123,0).
State(124).
EqVar("n",125,"&rr.length").
State(125).
State(126).
State(127).
State(128).
Return(0,129).
State(129).
State(123).
State(130).
NotEqVar("n",131,"&rr.length").
State(131).
State(132).
Return(0,133).
State(133).
State(97).
State(134).
Eq("peek",135,0).
State(135).
State(136).
Return(0,137).
State(137).
State(5).
State(138).
NotEq("peek",139,0).
State(139).
Eq("tem",141,0).
State(141).
SSL3_RECORD_set_read(142).
State(142).
NotEq("tem",143,0).
State(144).
State(145).
State(146).
Return(0,147).
State(147).
State(148).
NotEq("peek",149,0).
State(150).
EqVar("n",151,"&rr.length").
State(151).
State(152).
State(153).
State(154).
Return(0,155).
State(155).
State(149).
State(156).
NotEqVar("n",157,"&rr.length").
State(157).
State(158).
Return(0,159).
State(159).
State(143).
State(160).
Eq("peek",161,0).
State(161).
State(162).
Return(0,163).
State(163).
State(140).
NotEq("tem",164,0).
State(165).
State(166).
State(167).
Return(0,168).
State(168).
State(169).
NotEq("peek",170,0).
State(171).
EqVar("n",172,"&rr.length").
State(172).
State(173).
State(174).
State(175).
Return(0,176).
State(176).
State(170).
State(177).
NotEqVar("n",178,"&rr.length").
State(178).
State(179).
Return(0,180).
State(180).
State(164).
State(181).
Eq("peek",182,0).
State(182).
State(183).
Return(0,184).
State(184).
control_flow(6,7) :- EqD("peek",6,0).
control_flow(8,13) :- NotEqD("peek",8,0).
control_flow(14,15) :- EqVarD("n",14,"&rr.length").
control_flow(14,21) :- NotEqVarD("n",14,"&rr.length").
control_flow(8,25) :- EqD("peek",8,0).
control_flow(8,33) :- NotEqD("peek",8,0).
control_flow(34,35) :- EqVarD("n",34,"&rr.length").
control_flow(34,41) :- NotEqVarD("n",34,"&rr.length").
control_flow(8,45) :- EqD("peek",8,0).
control_flow(6,49) :- NotEqD("peek",6,0).
control_flow(54,59) :- NotEqD("peek",54,0).
control_flow(60,61) :- EqVarD("n",60,"&rr.length").
control_flow(60,67) :- NotEqVarD("n",60,"&rr.length").
control_flow(54,71) :- EqD("peek",54,0).
control_flow(75,80) :- NotEqD("peek",75,0).
control_flow(81,82) :- EqVarD("n",81,"&rr.length").
control_flow(81,88) :- NotEqVarD("n",81,"&rr.length").
control_flow(75,92) :- EqD("peek",75,0).
control_flow(5,96) :- EqD("peek",5,0).
control_flow(97,102) :- NotEqD("peek",97,0).
control_flow(103,104) :- EqVarD("n",103,"&rr.length").
control_flow(103,110) :- NotEqVarD("n",103,"&rr.length").
control_flow(97,114) :- EqD("peek",97,0).
control_flow(97,122) :- NotEqD("peek",97,0).
control_flow(123,124) :- EqVarD("n",123,"&rr.length").
control_flow(123,130) :- NotEqVarD("n",123,"&rr.length").
control_flow(97,134) :- EqD("peek",97,0).
control_flow(5,138) :- NotEqD("peek",5,0).
control_flow(143,148) :- NotEqD("peek",143,0).
control_flow(149,150) :- EqVarD("n",149,"&rr.length").
control_flow(149,156) :- NotEqVarD("n",149,"&rr.length").
control_flow(143,160) :- EqD("peek",143,0).
control_flow(164,169) :- NotEqD("peek",164,0).
control_flow(170,171) :- EqVarD("n",170,"&rr.length").
control_flow(170,177) :- NotEqVarD("n",170,"&rr.length").
control_flow(164,181) :- EqD("peek",164,0).
//AG(("tem"=0 => AF(SSL3_RECORD_set_read())))
.decl Start(x:number)
.decl State(x:number)
.decl flow(x:number,y:number)
.decl control_flow(x:number,y:number)
.decl transFlow(x:number,y:number)
.decl NotTotal(loc:number)
.decl Return(n0:number,n1:number)
.decl SSL3_RECORD_set_read(n0:number)
.decl NotEqVar(x:symbol,loc:number,y:symbol)
.decl NotEq(x:symbol,loc:number,n:number)
.decl Eq(x:symbol,loc:number,n:number)
.decl EqVar(x:symbol,loc:number,y:symbol)
.decl NotEqVarD(x:symbol,loc:number,y:symbol)
.decl EqVarD(x:symbol,loc:number,y:symbol)
.decl NotEqD(x:symbol,loc:number,n:number)
.decl EqD(x:symbol,loc:number,n:number)
.decl SSL3_RECORD_set_readPred(loc:number)
.decl AF_SSL3_RECORD_set_readPred_T(interm_state:number,loc:number)
.decl AF_SSL3_RECORD_set_readPred_S(loc:number)
.decl AF_SSL3_RECORD_set_readPred(loc:number)
.decl tem_eq_0(loc:number)
.decl tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc:number)
.decl NOT_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc:number)
.decl EF_NOT_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc:number)
.decl AG_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc:number)
.decl AG_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred_Final(loc:number)transFlow(x,y) :- control_flow(x,y).
transFlow(x,z) :- control_flow(x,y), transFlow(y,z).
NotTotal(loc) :- State(loc), !control_flow(loc,_).
NotTotal(loc) :- NotTotal(locI), control_flow(loc,locI).
control_flow(x,y) :- flow(x,y).
NotEqVarD(x,loc,n) :- NotEqVar(x,loc,n).
NotEqVarD(x,loc,n) :- NotEqVarD(x,locI,n), control_flow(locI,loc), !NotEqVar(x,loc,n), !EqVar(x,loc,n).
EqVarD(x,loc,n) :- EqVar(x,loc,n).
EqVarD(x,loc,n) :- EqVarD(x,locI,n), control_flow(locI,loc), !EqVar(x,loc,n), !NotEqVar(x,loc,n).
NotEqD(x,loc,n) :- NotEq(x,loc,n).
NotEqD(x,loc,n) :- NotEqD(x,locI,n), control_flow(locI,loc), !NotEq(x,loc,n), !Eq(x,loc,n).
EqD(x,loc,n) :- Eq(x,loc,n).
EqD(x,loc,n) :- EqD(x,locI,n), control_flow(locI,loc), !Eq(x,loc,n), !NotEq(x,loc,n).
SSL3_RECORD_set_readPred(loc) :- State(loc), SSL3_RECORD_set_read(loc).
AF_SSL3_RECORD_set_readPred_T(interm_state,loc) :- AF_SSL3_RECORD_set_readPred_T(tempOne,loc), !SSL3_RECORD_set_readPred(tempOne), control_flow(tempOne,interm_state).
AF_SSL3_RECORD_set_readPred_T(interm_state,loc) :- !SSL3_RECORD_set_readPred(loc), control_flow(loc,interm_state).
AF_SSL3_RECORD_set_readPred_S(loc) :- !SSL3_RECORD_set_readPred(loc), control_flow(loc,tempOne), AF_SSL3_RECORD_set_readPred_S(tempOne).
AF_SSL3_RECORD_set_readPred_S(loc) :- AF_SSL3_RECORD_set_readPred_T(loc,loc).
AF_SSL3_RECORD_set_readPred(loc) :- State(loc), !AF_SSL3_RECORD_set_readPred_S(loc).
tem_eq_0(loc) :- State(loc), EqD("tem",loc,0).
tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc) :- State(loc), !tem_eq_0(loc).
tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc) :- AF_SSL3_RECORD_set_readPred(loc).
NOT_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc) :- State(loc), !tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc).
EF_NOT_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc) :- control_flow(loc,tempOne), EF_NOT_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(tempOne).
EF_NOT_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc) :- NOT_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc).
AG_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc) :- State(loc), !EF_NOT_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc).
AG_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred_Final(loc) :- Start(loc), AG_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred(loc), !NotTotal(loc).
.output NotEqVar
.output NotEq
.output Eq
.output EqVar
.output Start
.output State
.output flow
.output Return
.output SSL3_RECORD_set_read
.output AG_tem_eq_0_IMPLY_AF_SSL3_RECORD_set_readPred_Final(IO=stdout)

.output NotTotal(IO=stdout)

