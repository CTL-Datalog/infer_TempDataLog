/*(Start())@2 · (EXIT())@3*/

flow(2,3).
flow(3,3).
Start(2).
State(2).
EXIT(3).
State(3).

/*(Start())@11 · (((prevClientConnection=0)@12 · (handleHTTPCmd_notSupported())@13 · (fIsActive=0)@14 · (Return(0))@15) \/ (((prevClientConnection!=0))@16 · (((prevClientConnection=this_)@17 · (handleHTTPCmd_notSupported())@18 · (fIsActive=0)@19 · (Return(0))@20) \/ (((prevClientConnection!=this_))@21 · (EXIT())@22))))*/

flow(11,12).
flow(12,13).
flow(13,14).
flow(14,15).
flow(15,15).
flow(11,16).
flow(16,17).
flow(17,18).
flow(18,19).
flow(19,20).
flow(20,20).
flow(16,21).
flow(21,22).
flow(22,22).
Start(11).
Eq("prevClientConnection",12,0).
State(12).
handleHTTPCmd_notSupported(13).
State(13).
State(14).
Return(0,15).
State(15).
State(11).
EqVar("prevClientConnection",17,"this_").
State(17).
handleHTTPCmd_notSupported(18).
State(18).
State(19).
Return(0,20).
State(20).
State(16).
State(21).
EXIT(22).
State(22).

//AG((("prevClientConnection"=0∨"prevClientConnection"="this_") => AF(Return(0))))
.decl Start(x:number)
.decl State(x:number)
.decl flow(x:number,y:number)
.decl control_flow(x:number,y:number)
.decl transFlow(x:number,y:number)
.decl NotTotal(loc:number)
.decl EXIT(n0:number)
.decl Return(n0:number,n1:number)
.decl handleHTTPCmd_notSupported(n0:number)
.decl NotEq(x:symbol,loc:number,n:number)
.decl NotEqVar(x:symbol,loc:number,y:symbol)
.decl EqVar(x:symbol,loc:number,y:symbol)
.decl Eq(x:symbol,loc:number,n:number)
.decl EqVarD(x:symbol,loc:number,y:symbol)
.decl EqD(x:symbol,loc:number,n:number)
.decl ReturnPred(loc:number)
.decl AF_ReturnPred_T(interm_state:number,loc:number)
.decl AF_ReturnPred_S(loc:number)
.decl AF_ReturnPred(loc:number)
.decl prevClientConnection_eq_this_(loc:number)
.decl prevClientConnection_eq_0(loc:number)
.decl prevClientConnection_eq_0_OR_prevClientConnection_eq_this_(loc:number)
.decl prevClientConnection_eq_0_OR_prevClientConnection_eq_this__IMPLY_AF_ReturnPred(loc:number)
.decl NOT_prevClientConnection_eq_0_OR_prevClientConnection_eq_this__IMPLY_AF_ReturnPred(loc:number)
.decl EF_NOT_prevClientConnection_eq_0_OR_prevClientConnection_eq_this__IMPLY_AF_ReturnPred(loc:number)
.decl AG_prevClientConnection_eq_0_OR_prevClientConnection_eq_this__IMPLY_AF_ReturnPred(loc:number)
.decl AG_prevClientConnection_eq_0_OR_prevClientConnection_eq_this__IMPLY_AF_ReturnPred_Final(loc:number)transFlow(x,y) :- control_flow(x,y).
transFlow(x,z) :- control_flow(x,y), transFlow(y,z).
NotTotal(loc) :- State(loc), !control_flow(loc,_).
NotTotal(loc) :- NotTotal(locI), control_flow(loc,locI).
control_flow(x,y) :- flow(x,y).
EqVarD(x,loc,n) :- EqVar(x,loc,n).
EqVarD(x,loc,n) :- EqVarD(x,locI,n), control_flow(locI,loc), !EqVar(x,loc,_), !NotEqVar(x,loc,_).
EqD(x,loc,n) :- Eq(x,loc,n).
EqD(x,loc,n) :- EqD(x,locI,n), control_flow(locI,loc), !Eq(x,loc,_), !NotEq(x,loc,_).
ReturnPred(loc) :- Return(_,loc).
AF_ReturnPred_T(interm_state,loc) :- AF_ReturnPred_T(tempOne,loc), !ReturnPred(tempOne), control_flow(tempOne,interm_state).
AF_ReturnPred_T(interm_state,loc) :- !ReturnPred(loc), control_flow(loc,interm_state).
AF_ReturnPred_S(loc) :- !ReturnPred(loc), control_flow(loc,tempOne), AF_ReturnPred_S(tempOne).
AF_ReturnPred_S(loc) :- AF_ReturnPred_T(loc,loc).
AF_ReturnPred(loc) :- State(loc), !AF_ReturnPred_S(loc).
prevClientConnection_eq_this_(loc) :- State(loc), EqVarD("prevClientConnection",loc,"this_").
prevClientConnection_eq_0(loc) :- State(loc), EqD("prevClientConnection",loc,0).
prevClientConnection_eq_0_OR_prevClientConnection_eq_this_(loc) :- prevClientConnection_eq_this_(loc).
prevClientConnection_eq_0_OR_prevClientConnection_eq_this_(loc) :- prevClientConnection_eq_0(loc).
prevClientConnection_eq_0_OR_prevClientConnection_eq_this__IMPLY_AF_ReturnPred(loc) :- State(loc), !prevClientConnection_eq_0_OR_prevClientConnection_eq_this_(loc).
prevClientConnection_eq_0_OR_prevClientConnection_eq_this__IMPLY_AF_ReturnPred(loc) :- AF_ReturnPred(loc).
NOT_prevClientConnection_eq_0_OR_prevClientConnection_eq_this__IMPLY_AF_ReturnPred(loc) :- State(loc), !prevClientConnection_eq_0_OR_prevClientConnection_eq_this__IMPLY_AF_ReturnPred(loc).
EF_NOT_prevClientConnection_eq_0_OR_prevClientConnection_eq_this__IMPLY_AF_ReturnPred(loc) :- control_flow(loc,tempOne), EF_NOT_prevClientConnection_eq_0_OR_prevClientConnection_eq_this__IMPLY_AF_ReturnPred(tempOne).
EF_NOT_prevClientConnection_eq_0_OR_prevClientConnection_eq_this__IMPLY_AF_ReturnPred(loc) :- NOT_prevClientConnection_eq_0_OR_prevClientConnection_eq_this__IMPLY_AF_ReturnPred(loc).
AG_prevClientConnection_eq_0_OR_prevClientConnection_eq_this__IMPLY_AF_ReturnPred(loc) :- State(loc), !EF_NOT_prevClientConnection_eq_0_OR_prevClientConnection_eq_this__IMPLY_AF_ReturnPred(loc).
AG_prevClientConnection_eq_0_OR_prevClientConnection_eq_this__IMPLY_AF_ReturnPred_Final(loc) :- Start(loc), AG_prevClientConnection_eq_0_OR_prevClientConnection_eq_this__IMPLY_AF_ReturnPred(loc), !NotTotal(loc).
.output NotEq
.output NotEqVar
.output EqVar
.output Eq
.output Start
.output State
.output flow
.output EXIT
.output Return
.output handleHTTPCmd_notSupported
.output AG_prevClientConnection_eq_0_OR_prevClientConnection_eq_this__IMPLY_AF_ReturnPred_Final(IO=stdout)

/* Other information 

//-- Facts for Procedure <handleHTTPCmd_notSupported> 

Flow(1,0). //@11:1-13:1
Exit(0).  // @13:1
Start(1). // @11:1
//-- Facts for Procedure <main> 

Flow(1,11). //@21:1-27:7
Flow(6,12). //@27:3-27:3
Flow(12,0). //@27:3-34:1
Flow(11,9). //@27:7-27:7
Flow(11,10). //@27:7-27:7
Flow(10,2). //@27:7-29:5
Flow(9,8). //@27:7-27:37
Flow(8,5). //@27:37-27:37
Flow(8,7). //@27:37-27:37
Flow(7,2). //@27:37-29:5
Flow(5,6). //@27:37-27:3
Flow(4,0). //@31:5-34:1
Flow(3,4). //@30:5-31:5
Flow(2,3). //@29:5-30:5
Stmt_Call(2,_fun_handleHTTPCmd_notSupported,[ICall(_fun_handleHTTPCmd_notSupported,,n$3)]). // @29:5
Stmt_BinaryOperatorStmt(3,Assign,[IStore(&fIsActive,0)]). // @30:5
Stmt_Return(4,[IStore(&return,0)]). // @31:5
PruneNode(5,false,[Prune(!(n$1 == n$2), false)]). // @27:37
PruneNode(7,true,[Prune((n$1 == n$2), true)]). // @27:37
Stmt_BinaryOperatorStmt(8,EQ,[ILoad(&prevClientConnection,n$1),ILoad(&this_,n$2)]). // @27:37
PruneNode(9,false,[Prune(!(n$0 == null), false)]). // @27:7
PruneNode(10,true,[Prune((n$0 == null), true)]). // @27:7
Stmt_BinaryOperatorStmt(11,EQ,[ILoad(&prevClientConnection,n$0)]). // @27:7
Stmt_BetweenJoinAndExit(12,[]). // @27:3
Join(6,[]).  // @27:3
Exit(0).  // @34:1
Start(1). // @21:1
*/

