/*(Start())@2 · (EXIT())@3*/

flow(2,3).
flow(3,3).
Start(2).
State(2).
EXIT(3).
State(3).

/*(Start())@35 · (((_dests_isTCP>0)@36 · ((((fRTPSink!=0))@37 · (RTPSink__removeStreamSocket_())@38 · ((((fRTCPInstance!=0))@39 · (RTCPInstance__removeStreamSocket_())@40 · (EXIT())@41) \/ ((fRTCPInstance=0)@42 · (EXIT())@43))) \/ ((fRTPSink=0)@44 · ((((fRTCPInstance!=0))@45 · (RTCPInstance__removeStreamSocket_())@46 · (EXIT())@47) \/ ((fRTCPInstance=0)@48 · (EXIT())@49))))) \/ ((_dests_isTCP<=0)@50 · ((((fRTPgs!=0))@51 · (Groupsock__removeDestination_())@52 · ((((fRTCPgs!=0))@53 · ((((fRTCPgs!=fRTPgs))@54 · (Groupsock__removeDestination_())@55 · ((((fRTCPInstance!=0))@56 · (RTCPInstance__unsetSpecificRRHandler_())@57 · (EXIT())@58) \/ ((fRTCPInstance=0)@59 · (EXIT())@60))) \/ ((fRTCPgs=fRTPgs)@61 · ((((fRTCPInstance!=0))@62 · (RTCPInstance__unsetSpecificRRHandler_())@63 · (EXIT())@64) \/ ((fRTCPInstance=0)@65 · (EXIT())@66))))) \/ ((fRTCPgs=0)@67 · ((((fRTCPInstance!=0))@68 · (RTCPInstance__unsetSpecificRRHandler_())@69 · (EXIT())@70) \/ ((fRTCPInstance=0)@71 · (EXIT())@72))))) \/ ((fRTPgs=0)@73 · ((((fRTCPgs!=0))@74 · ((((fRTCPgs!=fRTPgs))@75 · (Groupsock__removeDestination_())@76 · ((((fRTCPInstance!=0))@77 · (RTCPInstance__unsetSpecificRRHandler_())@78 · (EXIT())@79) \/ ((fRTCPInstance=0)@80 · (EXIT())@81))) \/ ((fRTCPgs=fRTPgs)@82 · ((((fRTCPInstance!=0))@83 · (RTCPInstance__unsetSpecificRRHandler_())@84 · (EXIT())@85) \/ ((fRTCPInstance=0)@86 · (EXIT())@87))))) \/ ((fRTCPgs=0)@88 · ((((fRTCPInstance!=0))@89 · (RTCPInstance__unsetSpecificRRHandler_())@90 · (EXIT())@91) \/ ((fRTCPInstance=0)@92 · (EXIT())@93))))))))*/

flow(35,36).
flow(36,37).
flow(37,38).
flow(38,39).
flow(39,40).
flow(40,41).
flow(41,41).
flow(38,42).
flow(42,43).
flow(43,43).
clearServerRequestAlternativeByteHandler_(38). // add this fact
flow(36,44).
flow(44,45).
flow(45,46).
flow(46,47).
flow(47,47).
flow(44,48).
flow(48,49).
flow(49,49).
flow(35,50).
flow(50,51).
flow(51,52).
flow(52,53).
flow(53,54).
flow(54,55).
flow(55,56).
flow(56,57).
flow(57,58).
flow(58,58).
flow(55,59).
flow(59,60).
flow(60,60).
flow(53,61).
flow(61,62).
flow(62,63).
flow(63,64).
flow(64,64).
flow(61,65).
flow(65,66).
flow(66,66).
flow(52,67).
flow(67,68).
flow(68,69).
flow(69,70).
flow(70,70).
flow(67,71).
flow(71,72).
flow(72,72).
flow(50,73).
flow(73,74).
flow(74,75).
flow(75,76).
flow(76,77).
flow(77,78).
flow(78,79).
flow(79,79).
flow(76,80).
flow(80,81).
flow(81,81).
flow(74,82).
flow(82,83).
flow(83,84).
flow(84,85).
flow(85,85).
flow(82,86).
flow(86,87).
flow(87,87).
flow(73,88).
flow(88,89).
flow(89,90).
flow(90,91).
flow(91,91).
flow(88,92).
flow(92,93).
flow(93,93).
Start(35).
Gt("_dests_isTCP",36,0).
NotEq("fRTPSink",37,0).
State(37).
RTPSink__removeStreamSocket_(38).
State(39).
RTCPInstance__removeStreamSocket_(40).
State(40).
EXIT(41).
State(41).
State(38).
State(42).
EXIT(43).
State(43).
State(36).
State(45).
RTCPInstance__removeStreamSocket_(46).
State(46).
EXIT(47).
State(47).
State(44).
State(48).
EXIT(49).
State(49).
State(35).
State(51).
Groupsock__removeDestination_(52).
State(54).
Groupsock__removeDestination_(55).
State(56).
RTCPInstance__unsetSpecificRRHandler_(57).
State(57).
EXIT(58).
State(58).
State(55).
State(59).
EXIT(60).
State(60).
State(53).
State(62).
RTCPInstance__unsetSpecificRRHandler_(63).
State(63).
EXIT(64).
State(64).
State(61).
State(65).
EXIT(66).
State(66).
State(52).
State(68).
RTCPInstance__unsetSpecificRRHandler_(69).
State(69).
EXIT(70).
State(70).
State(67).
State(71).
EXIT(72).
State(72).
State(50).
State(75).
Groupsock__removeDestination_(76).
State(77).
RTCPInstance__unsetSpecificRRHandler_(78).
State(78).
EXIT(79).
State(79).
State(76).
State(80).
EXIT(81).
State(81).
State(74).
State(83).
RTCPInstance__unsetSpecificRRHandler_(84).
State(84).
EXIT(85).
State(85).
State(82).
State(86).
EXIT(87).
State(87).
State(73).
State(89).
RTCPInstance__unsetSpecificRRHandler_(90).
State(90).
EXIT(91).
State(91).
State(88).
State(92).
EXIT(93).
State(93).

/*(Start())@94 · (EXIT())@95*/

flow(94,95).
flow(95,95).
Start(94).
State(94).
EXIT(95).
State(95).

/*(Start())@96 · (EXIT())@97*/

flow(96,97).
flow(97,97).
Start(96).
State(96).
EXIT(97).
State(97).

/*(Start())@98 · (EXIT())@99*/

flow(98,99).
flow(99,99).
Start(98).
State(98).
EXIT(99).
State(99).

/*(Start())@100 · (EXIT())@101*/

flow(100,101).
flow(101,101).
Start(100).
State(100).
EXIT(101).
State(101).

/*(Start())@102 · (EXIT())@103*/

flow(102,103).
flow(103,103).
Start(102).
State(102).
EXIT(103).
State(103).

/*(Start())@104 · (EXIT())@105*/

flow(104,105).
flow(105,105).
Start(104).
State(104).
EXIT(105).
State(105).

/*(Start())@106 · (EXIT())@107*/

flow(106,107).
flow(107,107).
Start(106).
State(106).
EXIT(107).
State(107).

/*(Start())@108 · (EXIT())@109*/

flow(108,109).
flow(109,109).
Start(108).
State(108).
EXIT(109).
State(109).

//AG(("_dests_isTCP">0∧("fRTPSink"!=0) => AF(clearServerRequestAlternativeByteHandler_())))
.decl Start(x:number)
.decl State(x:number)
.decl flow(x:number,y:number)
.decl control_flow(x:number,y:number)
.decl transFlow(x:number,y:number)
.decl NotTotal(loc:number)
.decl EXIT(n0:number)
.decl Groupsock__removeDestination_(n0:number)
.decl RTCPInstance__removeStreamSocket_(n0:number)
.decl RTCPInstance__unsetSpecificRRHandler_(n0:number)
.decl RTPSink__removeStreamSocket_(n0:number)
.decl clearServerRequestAlternativeByteHandler_(n0:number)
.decl LtEq(x:symbol,loc:number,n:number)
.decl NotEq(x:symbol,loc:number,n:number)
.decl Gt(x:symbol,loc:number,n:number)
.decl GtD(x:symbol,loc:number,n:number)
.decl clearServerRequestAlternativeByteHandler_Pred(loc:number)
.decl AF_clearServerRequestAlternativeByteHandler_Pred_T(interm_state:number,loc:number)
.decl AF_clearServerRequestAlternativeByteHandler_Pred_S(loc:number)
.decl AF_clearServerRequestAlternativeByteHandler_Pred(loc:number)
.decl fRTPSink_neq_0(loc:number)
.decl _dests_isTCP_gt_0(loc:number)
.decl _dests_isTCP_gt_0_AND_fRTPSink_neq_0(loc:number)
.decl _dests_isTCP_gt_0_AND_fRTPSink_neq_0_IMPLY_AF_clearServerRequestAlternativeByteHandler_Pred(loc:number)
.decl NOT__dests_isTCP_gt_0_AND_fRTPSink_neq_0_IMPLY_AF_clearServerRequestAlternativeByteHandler_Pred(loc:number)
.decl EF_NOT__dests_isTCP_gt_0_AND_fRTPSink_neq_0_IMPLY_AF_clearServerRequestAlternativeByteHandler_Pred(loc:number)
.decl AG__dests_isTCP_gt_0_AND_fRTPSink_neq_0_IMPLY_AF_clearServerRequestAlternativeByteHandler_Pred(loc:number)
.decl AG__dests_isTCP_gt_0_AND_fRTPSink_neq_0_IMPLY_AF_clearServerRequestAlternativeByteHandler_Pred_Final(loc:number)transFlow(x,y) :- control_flow(x,y).
transFlow(x,z) :- control_flow(x,y), transFlow(y,z).
NotTotal(loc) :- State(loc), !control_flow(loc,_).
NotTotal(loc) :- NotTotal(locI), control_flow(loc,locI).
control_flow(x,y) :- flow(x,y).
GtD(x,loc,n) :- Gt(x,loc,n).
GtD(x,loc,n) :- GtD(x,locI,n), control_flow(locI,loc), !Gt(x,loc,_), !LtEq(x,loc,_).
clearServerRequestAlternativeByteHandler_Pred(loc) :- State(loc), clearServerRequestAlternativeByteHandler_(loc).
AF_clearServerRequestAlternativeByteHandler_Pred_T(interm_state,loc) :- AF_clearServerRequestAlternativeByteHandler_Pred_T(tempOne,loc), !clearServerRequestAlternativeByteHandler_Pred(tempOne), control_flow(tempOne,interm_state).
AF_clearServerRequestAlternativeByteHandler_Pred_T(interm_state,loc) :- !clearServerRequestAlternativeByteHandler_Pred(loc), control_flow(loc,interm_state).
AF_clearServerRequestAlternativeByteHandler_Pred_S(loc) :- !clearServerRequestAlternativeByteHandler_Pred(loc), control_flow(loc,tempOne), AF_clearServerRequestAlternativeByteHandler_Pred_S(tempOne).
AF_clearServerRequestAlternativeByteHandler_Pred_S(loc) :- AF_clearServerRequestAlternativeByteHandler_Pred_T(loc,loc).
AF_clearServerRequestAlternativeByteHandler_Pred(loc) :- State(loc), !AF_clearServerRequestAlternativeByteHandler_Pred_S(loc).
fRTPSink_neq_0(loc) :- State(loc), NotEq("fRTPSink",loc,0).
_dests_isTCP_gt_0(loc) :- State(loc), GtD("_dests_isTCP",loc,0).
_dests_isTCP_gt_0_AND_fRTPSink_neq_0(loc) :- _dests_isTCP_gt_0(loc), fRTPSink_neq_0(loc).
_dests_isTCP_gt_0_AND_fRTPSink_neq_0_IMPLY_AF_clearServerRequestAlternativeByteHandler_Pred(loc) :- State(loc), !_dests_isTCP_gt_0_AND_fRTPSink_neq_0(loc).
_dests_isTCP_gt_0_AND_fRTPSink_neq_0_IMPLY_AF_clearServerRequestAlternativeByteHandler_Pred(loc) :- AF_clearServerRequestAlternativeByteHandler_Pred(loc).
NOT__dests_isTCP_gt_0_AND_fRTPSink_neq_0_IMPLY_AF_clearServerRequestAlternativeByteHandler_Pred(loc) :- State(loc), !_dests_isTCP_gt_0_AND_fRTPSink_neq_0_IMPLY_AF_clearServerRequestAlternativeByteHandler_Pred(loc).
EF_NOT__dests_isTCP_gt_0_AND_fRTPSink_neq_0_IMPLY_AF_clearServerRequestAlternativeByteHandler_Pred(loc) :- control_flow(loc,tempOne), EF_NOT__dests_isTCP_gt_0_AND_fRTPSink_neq_0_IMPLY_AF_clearServerRequestAlternativeByteHandler_Pred(tempOne).
EF_NOT__dests_isTCP_gt_0_AND_fRTPSink_neq_0_IMPLY_AF_clearServerRequestAlternativeByteHandler_Pred(loc) :- NOT__dests_isTCP_gt_0_AND_fRTPSink_neq_0_IMPLY_AF_clearServerRequestAlternativeByteHandler_Pred(loc).
AG__dests_isTCP_gt_0_AND_fRTPSink_neq_0_IMPLY_AF_clearServerRequestAlternativeByteHandler_Pred(loc) :- State(loc), !EF_NOT__dests_isTCP_gt_0_AND_fRTPSink_neq_0_IMPLY_AF_clearServerRequestAlternativeByteHandler_Pred(loc).
AG__dests_isTCP_gt_0_AND_fRTPSink_neq_0_IMPLY_AF_clearServerRequestAlternativeByteHandler_Pred_Final(loc) :- Start(loc), AG__dests_isTCP_gt_0_AND_fRTPSink_neq_0_IMPLY_AF_clearServerRequestAlternativeByteHandler_Pred(loc), !NotTotal(loc).
.output LtEq
.output NotEq
.output Gt
.output Start
.output State
.output flow
.output EXIT
.output Groupsock__removeDestination_
.output RTCPInstance__removeStreamSocket_
.output RTCPInstance__unsetSpecificRRHandler_
.output RTPSink__removeStreamSocket_
.output AG__dests_isTCP_gt_0_AND_fRTPSink_neq_0_IMPLY_AF_clearServerRequestAlternativeByteHandler_Pred_Final(IO=stdout)

/* Other information 

//-- Facts for Procedure <clearServerRequestAlternativeByteHandler> 

Flow(1,0). //@53:1-53:61
Exit(0).  // @53:61
Start(1). // @53:1
//-- Facts for Procedure <main> 

Flow(1,35). //@58:1-66:7
Flow(20,36). //@66:3-66:3
Flow(36,0). //@66:3-83:1
Flow(35,33). //@66:7-66:7
Flow(35,34). //@66:7-66:7
Flow(34,25). //@66:7-67:9
Flow(33,6). //@66:7-77:9
Flow(30,20). //@71:5-66:3
Flow(26,31). //@71:9-71:9
Flow(26,32). //@71:9-71:9
Flow(32,27). //@71:9-72:7
Flow(31,30). //@71:9-71:5
Flow(28,29). //@73:66-73:7
Flow(29,30). //@73:7-71:5
Flow(27,28). //@72:7-73:66
Flow(22,26). //@67:5-71:9
Flow(25,23). //@67:9-67:9
Flow(25,24). //@67:9-67:9
Flow(24,21). //@67:9-69:7
Flow(23,22). //@67:9-67:5
Flow(21,22). //@69:7-67:5
Flow(17,20). //@79:5-66:3
Flow(15,18). //@79:9-79:9
Flow(15,19). //@79:9-79:9
Flow(19,16). //@79:9-80:7
Flow(18,17). //@79:9-79:5
Flow(16,17). //@80:7-79:5
Flow(9,15). //@78:5-79:9
Flow(7,13). //@78:9-78:9
Flow(7,14). //@78:9-78:9
Flow(14,12). //@78:9-78:28
Flow(13,9). //@78:9-78:5
Flow(12,10). //@78:28-78:28
Flow(12,11). //@78:28-78:28
Flow(11,8). //@78:28-78:47
Flow(10,9). //@78:28-78:5
Flow(8,9). //@78:47-78:5
Flow(3,7). //@77:5-78:9
Flow(6,4). //@77:9-77:9
Flow(6,5). //@77:9-77:9
Flow(5,2). //@77:9-77:25
Flow(4,3). //@77:9-77:5
Flow(2,3). //@77:25-77:5
Stmt_Call(2,_fun_Groupsock::removeDestination,[ILoad(&fRTPgs,n$54),ILoad(n$54,_),ILoad(&clientSessionId,n$56),ICall(_fun_Groupsock::removeDestination,n$54,n$56,n$57)]). // @77:25
PruneNode(4,false,[Prune(!(n$53 != null), false)]). // @77:9
PruneNode(5,true,[Prune((n$53 != null), true)]). // @77:9
Stmt_BinaryOperatorStmt(6,NE,[ILoad(&fRTPgs,n$53)]). // @77:9
Join(3,[]).  // @77:5
Stmt_Call(8,_fun_Groupsock::removeDestination,[ILoad(&fRTCPgs,n$47),ILoad(n$47,_),ILoad(&clientSessionId,n$49),ICall(_fun_Groupsock::removeDestination,n$47,n$49,n$50)]). // @78:47
PruneNode(10,false,[Prune(!(n$45 != n$46), false)]). // @78:28
PruneNode(11,true,[Prune((n$45 != n$46), true)]). // @78:28
Stmt_BinaryOperatorStmt(12,NE,[ILoad(&fRTCPgs,n$45),ILoad(&fRTPgs,n$46)]). // @78:28
PruneNode(13,false,[Prune(!(n$44 != null), false)]). // @78:9
PruneNode(14,true,[Prune((n$44 != null), true)]). // @78:9
Stmt_BinaryOperatorStmt(7,NE,[ILoad(&fRTCPgs,n$44)]). // @78:9
Join(9,[]).  // @78:5
Stmt_Call(16,_fun_RTCPInstance::unsetSpecificRRHandler,[ILoad(&fRTCPInstance,n$34),ILoad(n$34,_),ILoad(&dests,n$36),ILoad(n$36.addr.s_addr,n$37),ILoad(&dests,n$39),ICall(_fun_Port::Port,&0$?%__sil_tmp__temp_construct_n$38,n$39.rtcpPort,n$40),ICall(_fun_RTCPInstance::unsetSpecificRRHandler,n$34,n$37,&0$?%__sil_tmp__temp_construct_n$38,n$41)]). // @80:7
PruneNode(18,false,[Prune(!(n$33 != null), false)]). // @79:9
PruneNode(19,true,[Prune((n$33 != null), true)]). // @79:9
Stmt_BinaryOperatorStmt(15,NE,[ILoad(&fRTCPInstance,n$33)]). // @79:9
Join(17,[]).  // @79:5
Stmt_Call(21,_fun_RTPSink::removeStreamSocket,[ILoad(&fRTPSink,n$24),ILoad(n$24,_),ILoad(&dests,n$26),ILoad(n$26.tcpSocketNum,n$27),ILoad(&dests,n$28),ILoad(n$28.rtpChannelId,n$29),ICall(_fun_RTPSink::removeStreamSocket,n$24,n$27,n$29,n$30)]). // @69:7
PruneNode(23,false,[Prune(!(n$23 != null), false)]). // @67:9
PruneNode(24,true,[Prune((n$23 != null), true)]). // @67:9
Stmt_BinaryOperatorStmt(25,NE,[ILoad(&fRTPSink,n$23)]). // @67:9
Join(22,[]).  // @67:5
Stmt_Call(27,_fun_RTCPInstance::removeStreamSocket,[ILoad(&fRTCPInstance,n$14),ILoad(n$14,_),ILoad(&dests,n$16),ILoad(n$16.tcpSocketNum,n$17),ILoad(&dests,n$18),ILoad(n$18.rtcpChannelId,n$19),ICall(_fun_RTCPInstance::removeStreamSocket,n$14,n$17,n$19,n$20)]). // @72:7
Stmt_CompoundStmt(29,[ILoad(&fRTCPInstance,n$4),ILoad(n$4,_),ILoad(&dests,n$6),ILoad(n$6.tcpSocketNum,n$7),ICall(_fun_Port::Port,&0$?%__sil_tmp__temp_construct_n$8,&0$?%__sil_tmpSIL_materialize_temp__n$3,n$12),ICall(_fun_RTCPInstance::unsetSpecificRRHandler,n$4,()n$7,&0$?%__sil_tmp__temp_construct_n$8,n$13)]). // @73:7
Stmt_Decl(28,[ILoad(&dests,n$9),ILoad(n$9.rtcpChannelId,n$10),ICall(_fun_Port::Port,&0$?%__sil_tmpSIL_materialize_temp__n$3,()n$10,n$11)]). // @73:66
PruneNode(31,false,[Prune(!(n$2 != null), false)]). // @71:9
PruneNode(32,true,[Prune((n$2 != null), true)]). // @71:9
Stmt_BinaryOperatorStmt(26,NE,[ILoad(&fRTCPInstance,n$2)]). // @71:9
Join(30,[]).  // @71:5
PruneNode(33,false,[Prune(!(n$1 > 0), false)]). // @66:7
PruneNode(34,true,[Prune((n$1 > 0), true)]). // @66:7
Stmt_BinaryOperatorStmt(35,GT,[ILoad(&dests,n$0),ILoad(n$0.isTCP,n$1)]). // @66:7
Stmt_BetweenJoinAndExit(36,[]). // @66:3
Join(20,[]).  // @66:3
Exit(0).  // @83:1
Start(1). // @58:1
//-- Facts for Procedure <Groupsock::removeDestination> 

Flow(1,0). //@50:1-50:45
Exit(0).  // @50:45
Start(1). // @50:1
//-- Facts for Procedure <Port::Port> 

Flow(1,0). //@11:7-11:7
Exit(0).  // @11:7
Start(1). // @11:7
//-- Facts for Procedure <Port::Port> 

Flow(1,0). //@11:7-11:7
Exit(0).  // @11:7
Start(1). // @11:7
//-- Facts for Procedure <Port::Port> 

Flow(1,0). //@13:3-15:3
Exit(0).  // @15:3
Start(1). // @13:3
//-- Facts for Procedure <RTCPInstance::unsetSpecificRRHandler> 

Flow(1,0). //@44:3-44:73
Exit(0).  // @44:73
Start(1). // @44:3
//-- Facts for Procedure <RTCPInstance::removeStreamSocket> 

Flow(1,0). //@42:3-42:72
Exit(0).  // @42:72
Start(1). // @42:3
//-- Facts for Procedure <RTPSink::envir> 

Flow(1,0). //@36:5-36:18
Exit(0).  // @36:18
Start(1). // @36:5
//-- Facts for Procedure <RTPSink::removeStreamSocket> 

Flow(1,0). //@32:5-34:5
Exit(0).  // @34:5
Start(1). // @32:5
*/

